2022-07-09 00:00:00,306 INFO (LogUtil.java:32)- insertFill(MyMetaObjectHandler.java:24) -->> start insert fill ....
2022-07-09 00:00:33,326 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:00:33,329 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:00:33,335 INFO (FrameworkServlet.java:547)- Completed initialization in 6 ms
2022-07-09 00:00:33,359 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:00:33,359 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:00:33,368 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:00:33,369 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:02:56,886 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:02:56,903 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:02:56,912 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:02:56,919 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:03:18,253 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:03:18,256 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:03:18,285 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:03:18,286 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:03:30,735 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:03:30,736 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:03:30,746 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:03:30,746 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:07:15,664 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:07:15,669 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:07:15,694 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:07:15,695 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:07:25,239 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:07:25,244 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:07:25,244 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:07:25,245 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:07:30,451 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:07:30,459 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:07:30,459 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:07:30,460 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:07:50,175 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:07:50,189 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:07:50,191 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:07:50,192 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:07:50,221 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 00:07:50,222 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 00:07:50,222 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 00:08:33,928 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:08:33,934 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:08:33,946 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 00:08:33,948 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 00:08:33,948 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 00:08:36,781 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:08:36,783 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:08:36,789 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 00:08:36,790 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 00:08:36,792 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 00:08:44,555 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:08:44,559 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:08:44,573 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:08:44,575 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:13:51,410 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:13:52,370 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:13:52,375 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:13:53,346 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:13:53,401 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:13:53,403 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:13:53,403 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:13:53,403 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:13:53,569 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:13:53,571 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:13:53,597 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:13:53,598 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:13:53,613 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:13:53,614 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:13:59,983 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:14:00,098 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 46499 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:14:00,101 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:14:01,721 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:14:01,724 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:14:01,860 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 131 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:14:01,875 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:14:01,875 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:14:01,900 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 24 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:14:01,919 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:14:01,922 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:14:01,963 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:14:01,964 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 00:14:02,122 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:14:02,717 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:14:02,736 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$147d469d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:14:02,781 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:14:03,183 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:14:03,192 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:14:03,193 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:14:03,193 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:14:03,292 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:14:03,293 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3120 ms
2022-07-09 00:14:03,600 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:14:04,040 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:14:04,049 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:14:04,093 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:14:04,094 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:14:04,094 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:14:04,094 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:14:05,646 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:14:05,648 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:14:07,060 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,064 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,065 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,065 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,066 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,066 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,066 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,067 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,067 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,068 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,068 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,069 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,069 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,069 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,069 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,069 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,069 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:14:07,128 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:14:07,131 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:14:07,131 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:14:07,243 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:14:08,280 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:14:08,438 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:14:08,438 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:14:08,438 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:14:08,439 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:14:08,439 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:14:08,439 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:14:08,439 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:14:08,439 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:14:08,439 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:14:08,439 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:14:08,440 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:14:08,440 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:14:08,440 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:14:08,440 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:14:08,440 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:14:08,440 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:14:08,518 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d2eb7fa, org.springframework.security.web.context.SecurityContextPersistenceFilter@2b19b346, org.springframework.security.web.header.HeaderWriterFilter@7cbede2b, org.springframework.security.web.authentication.logout.LogoutFilter@33f2cf82, com.ve.blog.handler.JwtAuthenticationTokenFilter@2154652c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7ae0a26, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@706d2bae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a5efbb9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@56fa0ef, org.springframework.security.web.session.SessionManagementFilter@2d3d4a54, org.springframework.security.web.access.ExceptionTranslationFilter@3e71a1f8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@57df09a7]
2022-07-09 00:14:08,703 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:14:09,084 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:14:09,258 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:14:09,305 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:14:09,307 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:14:09,310 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:14:09,398 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:14:10,046 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:14:10,263 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:14:10,315 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#2c815fdc:0/SimpleConnection@75566f4 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 53513]
2022-07-09 00:14:10,416 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.034 seconds (JVM running for 11.699)
2022-07-09 00:14:24,610 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:14:24,616 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:14:24,623 INFO (FrameworkServlet.java:547)- Completed initialization in 7 ms
2022-07-09 00:14:24,648 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:14:24,649 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:14:24,689 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:14:24,690 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:14:35,299 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:14:35,301 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:14:35,312 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:14:35,314 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:16:35,569 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:16:36,030 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:16:36,033 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:16:36,990 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:16:37,045 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:16:37,065 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:16:37,066 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:16:37,066 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:16:37,120 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:16:37,124 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:16:37,149 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:16:37,152 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:16:37,265 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:16:37,266 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:16:43,862 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:16:43,955 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 47035 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:16:43,957 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:16:45,501 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:16:45,503 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:16:45,635 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 127 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:16:45,650 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:16:45,650 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:16:45,672 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:16:45,690 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:16:45,692 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:16:45,739 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:16:45,739 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 33 ms. Found 0 Redis repository interfaces.
2022-07-09 00:16:45,899 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:16:46,472 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:16:46,487 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$95e40445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:16:46,537 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:16:46,944 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:16:46,953 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:16:46,954 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:16:46,955 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:16:47,052 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:16:47,053 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3034 ms
2022-07-09 00:16:47,368 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:16:47,775 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:16:47,784 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:16:47,836 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:16:47,837 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:16:47,837 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:16:47,837 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:16:49,422 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:16:49,425 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:16:50,944 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,949 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,949 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,949 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,950 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,950 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,951 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,951 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,951 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,951 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,952 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,952 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,952 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,952 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,952 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,952 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,953 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,953 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,953 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:50,953 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:16:51,024 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:16:51,026 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:16:51,026 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:16:51,165 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:16:52,256 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:16:52,405 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:16:52,406 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:16:52,406 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:16:52,406 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:16:52,406 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:16:52,406 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:16:52,406 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:16:52,407 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:16:52,488 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3a239dac, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d4a34ff, org.springframework.security.web.header.HeaderWriterFilter@14c5283, org.springframework.security.web.authentication.logout.LogoutFilter@2bd7f686, com.ve.blog.handler.JwtAuthenticationTokenFilter@1b3bec6c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f6bc75c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ef04613, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5751e53e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@759f45f1, org.springframework.security.web.session.SessionManagementFilter@46748b04, org.springframework.security.web.access.ExceptionTranslationFilter@5ee0cf64, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@744fb110]
2022-07-09 00:16:52,677 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:16:53,039 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:16:53,222 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:16:53,270 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:16:53,272 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:16:53,275 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:16:53,364 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:16:54,033 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:16:54,261 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:16:54,314 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#66e1b2a:0/SimpleConnection@75566f4 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 54288]
2022-07-09 00:16:54,413 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.177 seconds (JVM running for 11.964)
2022-07-09 00:17:56,104 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:17:56,108 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:17:56,115 INFO (FrameworkServlet.java:547)- Completed initialization in 6 ms
2022-07-09 00:17:56,135 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:17:56,136 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:17:56,175 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:17:56,176 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:18:09,825 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:18:09,827 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:18:09,855 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:18:09,858 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:19:22,120 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:19:22,124 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:19:22,162 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:19:22,164 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:19:23,824 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:19:23,842 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:19:23,855 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:19:23,855 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url ，设置默认角色：游客
2022-07-09 00:21:05,838 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:21:06,507 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:21:06,511 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:21:07,498 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:21:07,550 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:21:07,552 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:21:07,552 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:21:07,552 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:21:07,618 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:21:07,622 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:21:07,648 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:21:07,650 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:21:07,671 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:21:07,672 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:21:26,556 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:21:26,628 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 47997 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:21:26,630 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:21:28,085 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:21:28,090 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:21:28,220 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 125 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:21:28,234 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:21:28,235 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:21:28,266 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 30 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:21:28,289 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:21:28,290 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:21:28,328 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:21:28,329 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 00:21:28,488 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:21:29,069 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:21:29,089 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$95e40445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:21:29,141 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:21:29,535 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:21:29,543 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:21:29,545 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:21:29,545 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:21:29,638 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:21:29,638 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 2950 ms
2022-07-09 00:21:29,934 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:21:30,355 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:21:30,365 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:21:30,414 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:21:30,414 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:21:30,415 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:21:30,415 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:21:31,907 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:21:31,910 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:21:33,313 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,317 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,317 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,317 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,318 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,318 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,318 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,318 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,319 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,319 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,319 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,319 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,319 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,320 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,320 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,320 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,320 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,320 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,320 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,320 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:21:33,380 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:21:33,381 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:21:33,382 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:21:33,494 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:21:34,475 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:21:34,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:21:34,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:21:34,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:21:34,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:21:34,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:21:34,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:21:34,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:21:34,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:21:34,630 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:21:34,706 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2573b149, org.springframework.security.web.context.SecurityContextPersistenceFilter@1ef04613, org.springframework.security.web.header.HeaderWriterFilter@46748b04, org.springframework.security.web.authentication.logout.LogoutFilter@5b2c7186, com.ve.blog.handler.JwtAuthenticationTokenFilter@1b3bec6c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@bea283b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@215c6ec0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19ce19b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1479ed5a, org.springframework.security.web.session.SessionManagementFilter@5d4a34ff, org.springframework.security.web.access.ExceptionTranslationFilter@14c5283, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7474196]
2022-07-09 00:21:34,885 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:21:35,264 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:21:35,432 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:21:35,483 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:21:35,485 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:21:35,488 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:21:35,568 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:21:36,117 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:21:36,351 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:21:36,401 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#66e1b2a:0/SimpleConnection@5c261c74 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 55546]
2022-07-09 00:21:36,490 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.516 seconds (JVM running for 11.285)
2022-07-09 00:21:39,319 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:21:39,321 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:21:39,326 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 00:21:39,341 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:21:39,342 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:21:39,386 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:21:39,387 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:22:39,206 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:22:39,211 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:22:39,231 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:22:39,232 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/error ，设置默认角色：游客
2022-07-09 00:27:47,149 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:27:47,153 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:27:47,167 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:27:47,168 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/error ，设置默认角色：游客
2022-07-09 00:28:01,778 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:28:01,779 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:28:01,783 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:28:01,788 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/error ，设置默认角色：游客
2022-07-09 00:29:13,754 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:29:14,417 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:29:14,421 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:29:15,388 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:29:15,439 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:29:15,441 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:29:15,441 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:29:15,441 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:29:15,590 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:29:15,598 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:29:15,626 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:29:15,629 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:29:15,647 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:29:15,648 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:29:22,327 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:29:22,420 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 49590 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:29:22,422 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:29:24,155 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:29:24,158 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:29:24,321 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 157 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:29:24,341 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:29:24,342 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:29:24,370 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 27 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:29:24,396 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:29:24,397 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:29:24,440 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:29:24,440 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2022-07-09 00:29:24,646 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:29:25,398 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:29:25,420 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:29:25,476 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:29:25,938 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:29:25,947 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:29:25,948 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:29:25,948 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:29:26,058 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:29:26,059 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3571 ms
2022-07-09 00:29:26,379 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:29:26,820 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:29:26,830 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:29:26,880 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:29:26,880 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:29:26,880 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:29:26,881 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:29:28,530 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:29:28,535 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:29:29,965 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,969 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,970 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,970 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,970 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,971 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,971 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,971 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,972 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,972 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,972 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,972 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,973 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,973 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,973 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,973 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,974 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,974 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,974 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:29,974 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:29:30,039 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:29:30,041 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:29:30,042 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:29:30,156 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:29:31,185 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:29:31,361 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:29:31,361 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:29:31,361 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:29:31,361 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:29:31,362 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:29:31,362 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:29:31,362 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:29:31,362 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:29:31,362 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:29:31,362 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:29:31,362 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:29:31,363 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:29:31,363 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:29:31,363 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:29:31,363 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:29:31,363 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:29:31,459 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d00b469, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ddf5118, org.springframework.security.web.header.HeaderWriterFilter@2a5efbb9, org.springframework.security.web.authentication.logout.LogoutFilter@42db955e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@33e8694b, org.springframework.security.web.session.ConcurrentSessionFilter@1b9c716f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@fcd3a6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@637506d8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@dd07be8, org.springframework.security.web.session.SessionManagementFilter@73e93c3a, org.springframework.security.web.access.ExceptionTranslationFilter@13047d3d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f439e0f]
2022-07-09 00:29:31,651 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:29:32,195 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:29:32,440 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:29:32,512 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:29:32,514 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:29:32,518 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:29:32,626 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:29:33,458 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:29:33,741 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:29:33,809 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#343db2f6:0/SimpleConnection@71806c64 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 57815]
2022-07-09 00:29:33,966 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 12.266 seconds (JVM running for 13.072)
2022-07-09 00:29:42,943 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:29:42,953 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:29:42,964 INFO (FrameworkServlet.java:547)- Completed initialization in 10 ms
2022-07-09 00:29:42,994 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:29:42,995 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:29:43,060 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:29:43,062 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:29:55,551 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:29:55,553 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:29:55,569 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:29:55,570 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:44:29,767 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:44:33,733 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:44:33,828 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 52538 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:44:33,830 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:44:35,421 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:44:35,424 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:44:35,561 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 131 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:44:35,577 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:44:35,577 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:44:35,599 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:44:35,619 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:44:35,621 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:44:35,661 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:44:35,662 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 00:44:35,829 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:44:36,460 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:44:36,477 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:44:36,527 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:44:36,979 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:44:36,990 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:44:36,991 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:44:36,992 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:44:37,091 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:44:37,092 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3201 ms
2022-07-09 00:44:37,419 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:44:37,828 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:44:37,838 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:44:37,887 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:44:37,887 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:44:37,887 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:44:37,888 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:44:39,398 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:44:39,401 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:44:40,762 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,766 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,767 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,767 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,767 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,768 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,768 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,768 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,768 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,768 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,769 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,769 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,769 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,769 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,770 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,770 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,770 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,770 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,770 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,770 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:44:40,828 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:44:40,831 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:44:40,831 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:44:40,953 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:44:41,945 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:44:42,098 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:44:42,098 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:44:42,098 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:44:42,099 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:44:42,099 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:44:42,099 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:44:42,099 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:44:42,099 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:44:42,099 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:44:42,100 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:44:42,100 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:44:42,100 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:44:42,100 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:44:42,100 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:44:42,100 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:44:42,100 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:44:42,188 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75f2ff80, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d0778d0, org.springframework.security.web.header.HeaderWriterFilter@7030b74c, org.springframework.security.web.authentication.logout.LogoutFilter@7affee54, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4679554d, org.springframework.security.web.session.ConcurrentSessionFilter@43cbafa6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fc71437, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e02cc37, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7c8b37a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@253b1cbd, org.springframework.security.web.session.SessionManagementFilter@512dc0e0, org.springframework.security.web.access.ExceptionTranslationFilter@5f35370b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bde9a22]
2022-07-09 00:44:42,367 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:44:42,733 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:44:42,912 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:44:42,960 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:44:42,962 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:44:42,965 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:44:43,049 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:44:43,710 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:44:43,926 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:44:43,979 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#343db2f6:0/SimpleConnection@63053b71 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 61774]
2022-07-09 00:44:44,090 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.97 seconds (JVM running for 11.787)
2022-07-09 00:45:15,325 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:45:15,328 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:45:15,344 INFO (FrameworkServlet.java:547)- Completed initialization in 16 ms
2022-07-09 00:45:15,372 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:45:15,374 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 00:45:15,417 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:45:15,418 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:45:47,737 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:45:48,350 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:45:48,352 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:45:49,329 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:45:49,377 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:45:49,380 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:45:49,380 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:45:49,381 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:45:49,448 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:45:49,452 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:45:49,473 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:45:49,474 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:45:49,501 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:45:49,503 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:45:51,755 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:45:51,859 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 52785 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:45:51,860 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:45:53,428 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:45:53,431 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:45:53,565 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 128 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:45:53,580 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:45:53,581 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:45:53,603 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:45:53,621 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:45:53,623 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:45:53,662 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:45:53,662 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 00:45:53,827 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:45:54,416 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:45:54,433 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:45:54,481 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:45:54,901 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:45:54,911 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:45:54,913 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:45:54,913 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:45:55,029 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:45:55,030 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3103 ms
2022-07-09 00:45:55,361 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:45:55,798 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:45:55,807 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:45:55,862 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:45:55,863 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:45:55,863 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:45:55,863 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:45:57,491 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:45:57,494 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:45:59,028 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,032 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,033 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,033 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,033 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,034 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,034 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,034 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,034 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,035 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,035 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,035 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,035 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,035 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,036 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,036 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,036 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,036 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,036 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,036 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:45:59,105 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:45:59,108 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:45:59,108 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:45:59,230 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:46:00,341 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:46:00,524 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:46:00,524 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:46:00,524 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:46:00,525 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:46:00,525 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:46:00,525 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:46:00,525 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:46:00,525 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:46:00,525 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:46:00,525 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:46:00,526 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:46:00,526 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:46:00,526 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:46:00,526 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:46:00,526 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:46:00,526 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:46:00,633 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75f2ff80, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d0778d0, org.springframework.security.web.header.HeaderWriterFilter@7030b74c, org.springframework.security.web.authentication.logout.LogoutFilter@7affee54, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4679554d, org.springframework.security.web.session.ConcurrentSessionFilter@43cbafa6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fc71437, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e02cc37, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7c8b37a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@253b1cbd, org.springframework.security.web.session.SessionManagementFilter@512dc0e0, org.springframework.security.web.access.ExceptionTranslationFilter@5f35370b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bde9a22]
2022-07-09 00:46:00,821 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:46:01,197 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:46:01,381 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:46:01,439 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:46:01,443 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:46:01,449 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:46:01,683 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:46:01,732 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:46:01,734 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:46:01,751 INFO (FrameworkServlet.java:547)- Completed initialization in 16 ms
2022-07-09 00:46:01,786 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:46:01,788 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 00:46:01,848 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:46:01,851 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:46:02,438 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:46:02,670 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:46:02,716 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#343db2f6:0/SimpleConnection@5c261c74 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62137]
2022-07-09 00:46:02,808 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.658 seconds (JVM running for 12.434)
2022-07-09 00:46:37,741 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:46:37,918 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:46:37,921 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:46:38,917 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:46:38,967 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:46:38,969 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:46:38,969 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:46:38,970 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:46:39,024 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:46:39,028 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:46:39,048 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:46:39,049 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:46:39,062 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:46:39,063 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:47:18,461 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:47:18,545 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 53105 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:47:18,547 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:47:20,138 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:47:20,142 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:47:20,277 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 130 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:47:20,293 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:47:20,294 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:47:20,316 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:47:20,339 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:47:20,340 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:47:20,379 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:47:20,379 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 00:47:20,559 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:47:21,197 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:47:21,214 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:47:21,267 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:47:21,708 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:47:21,717 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:47:21,718 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:47:21,718 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:47:21,820 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:47:21,821 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3214 ms
2022-07-09 00:47:22,140 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:47:22,562 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:47:22,572 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:47:22,617 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:47:22,618 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:47:22,618 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:47:22,618 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:47:24,139 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:47:24,142 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:47:25,546 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,552 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,552 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,553 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,554 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,554 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,554 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,555 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,555 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,556 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,556 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,558 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,559 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,559 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,559 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,559 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,560 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,560 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,560 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,560 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:47:25,627 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:47:25,628 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:47:25,629 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:47:25,745 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:47:26,749 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:47:26,913 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:47:26,913 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:47:26,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:47:26,915 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:47:26,915 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:47:26,915 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:47:26,915 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:47:26,915 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:47:26,915 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:47:27,007 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75f2ff80, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d0778d0, org.springframework.security.web.header.HeaderWriterFilter@7030b74c, org.springframework.security.web.authentication.logout.LogoutFilter@7affee54, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4679554d, org.springframework.security.web.session.ConcurrentSessionFilter@43cbafa6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fc71437, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e02cc37, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7c8b37a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@253b1cbd, org.springframework.security.web.session.SessionManagementFilter@512dc0e0, org.springframework.security.web.access.ExceptionTranslationFilter@5f35370b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bde9a22]
2022-07-09 00:47:27,195 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:47:27,561 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:47:27,738 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:47:27,786 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:47:27,788 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:47:27,791 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:47:27,873 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:47:28,529 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:47:28,768 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:47:28,825 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#343db2f6:0/SimpleConnection@4687c184 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62528]
2022-07-09 00:47:28,929 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.081 seconds (JVM running for 11.923)
2022-07-09 00:47:38,281 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:47:38,283 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:47:38,299 INFO (FrameworkServlet.java:547)- Completed initialization in 15 ms
2022-07-09 00:47:38,331 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:47:38,333 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 00:47:38,381 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:47:38,383 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:48:12,806 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:48:13,100 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:48:13,104 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:48:14,104 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:48:14,153 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:48:14,155 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:48:14,156 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:48:14,156 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:48:14,206 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:48:14,209 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:48:14,231 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:48:14,233 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:48:14,246 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:48:14,248 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:48:33,150 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:48:33,238 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 53359 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:48:33,240 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:48:34,807 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:48:34,809 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:48:34,950 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 135 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:48:34,965 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:48:34,966 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:48:34,991 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 24 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:48:35,017 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:48:35,018 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:48:35,057 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:48:35,058 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 00:48:35,243 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:48:35,866 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:48:35,883 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$fb1e4818] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:48:35,936 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:48:36,384 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:48:36,393 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:48:36,395 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:48:36,396 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:48:36,496 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:48:36,497 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3197 ms
2022-07-09 00:48:36,822 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:48:37,230 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:48:37,239 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:48:37,296 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:48:37,298 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:48:37,299 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:48:37,299 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:48:38,543 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:48:38,546 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:48:40,246 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,250 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,250 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,251 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,251 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,251 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,251 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,251 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,252 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,252 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,252 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,252 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,253 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,253 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,253 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,253 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,254 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,254 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,254 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,254 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:48:40,322 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:48:40,324 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:48:40,324 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:48:40,447 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:48:41,473 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:48:41,627 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:48:41,627 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:48:41,627 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:48:41,627 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:48:41,627 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:48:41,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:48:41,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:48:41,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:48:41,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:48:41,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:48:41,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:48:41,628 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:48:41,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:48:41,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:48:41,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:48:41,629 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:48:41,722 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4727e5fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@43b45ce4, org.springframework.security.web.header.HeaderWriterFilter@5d4a34ff, org.springframework.security.web.authentication.logout.LogoutFilter@fcd3a6f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@16c8e9b8, org.springframework.security.web.session.ConcurrentSessionFilter@4e789704, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1835b783, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33f2cf82, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@62410e1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5487a8f1, org.springframework.security.web.session.SessionManagementFilter@1ef04613, org.springframework.security.web.access.ExceptionTranslationFilter@46748b04, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1479ed5a]
2022-07-09 00:48:41,887 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:48:42,259 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:48:42,431 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:48:42,477 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:48:42,479 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:48:42,481 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:48:42,561 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:48:43,177 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:48:43,423 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:48:43,460 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#5464b97c:0/SimpleConnection@61d527ac [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62872]
2022-07-09 00:48:43,573 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.026 seconds (JVM running for 11.736)
2022-07-09 00:48:49,182 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:48:49,186 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:48:49,200 INFO (FrameworkServlet.java:547)- Completed initialization in 13 ms
2022-07-09 00:48:49,273 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:48:49,275 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:48:55,803 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:48:55,804 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:49:25,713 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:49:25,741 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:49:25,745 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:49:26,745 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:49:26,807 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:49:26,809 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:49:26,809 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:49:26,810 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:49:26,860 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:49:26,862 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:49:26,887 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:49:26,890 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:49:26,905 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:49:26,906 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:49:33,924 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:49:34,010 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 53563 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:49:34,012 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:49:35,592 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:49:35,594 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:49:35,730 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 131 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:49:35,745 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:49:35,746 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:49:35,775 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 28 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:49:35,797 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:49:35,798 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:49:35,837 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:49:35,837 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 00:49:36,022 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:49:36,646 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:49:36,663 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:49:36,720 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:49:37,170 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:49:37,179 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:49:37,180 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:49:37,180 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:49:37,285 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:49:37,286 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3208 ms
2022-07-09 00:49:37,616 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:49:38,024 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:49:38,034 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:49:38,084 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:49:38,085 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:49:38,085 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:49:38,085 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:49:39,630 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:49:39,634 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:49:41,845 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,881 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,882 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,882 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,882 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,882 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,883 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,883 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,883 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,883 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,883 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,883 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,884 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,884 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,884 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,884 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,884 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,884 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,884 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:41,885 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:49:42,035 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:49:42,036 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:49:42,036 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:49:42,190 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:49:43,377 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:49:43,564 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:49:43,564 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:49:43,565 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:49:43,565 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:49:43,565 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:49:43,565 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:49:43,566 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:49:43,566 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:49:43,566 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:49:43,566 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:49:43,566 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:49:43,566 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:49:43,566 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:49:43,567 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:49:43,567 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:49:43,567 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:49:43,661 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75f2ff80, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d0778d0, org.springframework.security.web.header.HeaderWriterFilter@7030b74c, org.springframework.security.web.authentication.logout.LogoutFilter@7affee54, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4679554d, org.springframework.security.web.session.ConcurrentSessionFilter@43cbafa6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4fc71437, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e02cc37, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7c8b37a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@253b1cbd, org.springframework.security.web.session.SessionManagementFilter@512dc0e0, org.springframework.security.web.access.ExceptionTranslationFilter@5f35370b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1bde9a22]
2022-07-09 00:49:43,866 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:49:44,251 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:49:44,426 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:49:44,475 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:49:44,479 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:49:44,482 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:49:44,574 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:49:45,417 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 00:49:45,421 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 00:49:45,427 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 00:49:45,450 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:49:45,451 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 00:49:45,475 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:49:45,486 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:49:45,487 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 00:49:45,855 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:49:45,914 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#343db2f6:0/SimpleConnection@6167a456 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 63173]
2022-07-09 00:49:46,017 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 12.736 seconds (JVM running for 13.569)
2022-07-09 00:50:17,993 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:17,996 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,064 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,081 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,170 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,182 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,182 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,183 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,183 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,183 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,185 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,185 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,185 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,186 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,186 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,186 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,296 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,296 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,297 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,316 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,317 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,317 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,317 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,317 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,318 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,318 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,318 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,476 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,477 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,533 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,534 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,917 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,919 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,925 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,925 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,925 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,925 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,925 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,926 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,925 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,927 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,963 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,963 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,963 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,964 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,964 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,964 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:18,977 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:18,977 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:24,699 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:24,701 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:24,703 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:24,704 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:24,704 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:24,704 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:50:33,433 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 00:50:33,434 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 00:50:33,435 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:33,437 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 00:50:33,575 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> POST
2022-07-09 00:50:33,576 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 00:50:33,577 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 00:50:33,618 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 00:50:33,618 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 00:58:04,887 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:58:05,003 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:58:05,005 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 00:58:05,030 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 00:58:05,079 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 00:58:05,081 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:58:05,082 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 00:58:05,082 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 00:58:05,207 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 00:58:05,211 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 00:58:05,239 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 00:58:05,240 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 00:58:05,257 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 00:58:05,259 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 00:58:12,342 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 00:58:12,446 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 55275 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 00:58:12,449 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 00:58:14,003 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:58:14,006 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:58:14,146 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 135 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 00:58:14,162 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:58:14,162 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 00:58:14,185 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 00:58:14,204 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 00:58:14,207 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 00:58:14,245 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 00:58:14,246 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 00:58:14,403 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 00:58:15,017 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:58:15,037 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$147d469d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:58:15,092 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 00:58:15,529 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 00:58:15,537 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:58:15,539 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 00:58:15,539 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 00:58:15,642 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 00:58:15,643 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3125 ms
2022-07-09 00:58:15,961 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 00:58:16,383 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 00:58:16,389 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 00:58:16,436 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 00:58:16,437 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 00:58:16,437 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 00:58:16,437 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 00:58:17,953 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 00:58:17,956 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 00:58:19,346 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,349 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,350 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,350 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,350 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,350 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,350 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,351 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,351 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,351 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,351 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,351 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,352 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,352 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,352 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,352 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,352 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,352 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,353 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,353 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 00:58:19,412 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 00:58:19,414 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 00:58:19,415 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 00:58:19,529 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 00:58:20,546 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 00:58:20,698 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/login'] with []
2022-07-09 00:58:20,699 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/logout'] with []
2022-07-09 00:58:20,699 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/register'] with []
2022-07-09 00:58:20,699 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 00:58:20,699 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 00:58:20,700 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 00:58:20,701 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 00:58:20,701 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 00:58:20,701 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 00:58:20,792 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a859c5, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fc71437, org.springframework.security.web.header.HeaderWriterFilter@512dc0e0, org.springframework.security.web.authentication.logout.LogoutFilter@2337bf27, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@49353d43, org.springframework.security.web.session.ConcurrentSessionFilter@64fc6470, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@631678e6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@652a1a17, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@75f2ff80, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37083af6, org.springframework.security.web.session.SessionManagementFilter@75063bd0, org.springframework.security.web.access.ExceptionTranslationFilter@7030b74c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74a03bd5]
2022-07-09 00:58:20,972 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 00:58:21,327 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 00:58:21,499 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 00:58:21,546 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 00:58:21,548 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 00:58:21,551 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 00:58:21,628 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 00:58:22,246 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 00:58:22,481 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 00:58:22,534 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#2c815fdc:0/SimpleConnection@37c45154 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 49402]
2022-07-09 00:58:22,632 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.867 seconds (JVM running for 11.576)
2022-07-09 01:00:18,166 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:00:18,169 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:00:18,175 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 01:00:18,189 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:00:18,190 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:00:18,232 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:00:18,233 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 01:03:32,933 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:03:33,028 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:03:33,032 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:03:34,009 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:03:34,063 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:03:34,065 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:03:34,066 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:03:34,066 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:03:34,255 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:03:34,259 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:03:34,281 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:03:34,283 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:03:34,303 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:03:34,304 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:03:38,025 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:03:38,128 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 56328 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:03:38,131 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:03:39,719 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:03:39,722 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:03:39,872 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 145 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:03:39,888 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:03:39,889 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:03:39,911 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:03:39,934 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:03:39,935 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:03:39,973 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:03:39,974 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 01:03:40,153 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:03:40,814 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:03:40,836 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$147d469d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:03:40,895 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:03:41,328 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:03:41,345 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:03:41,346 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:03:41,347 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:03:41,451 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:03:41,451 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3260 ms
2022-07-09 01:03:41,775 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:03:42,195 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:03:42,204 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:03:42,247 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:03:42,248 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:03:42,248 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:03:42,248 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:03:43,809 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:03:43,812 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:03:45,168 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,172 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,172 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,173 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,173 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,173 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,173 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,174 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,174 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,174 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,174 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,174 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,174 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,175 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,175 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,175 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,175 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,175 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,176 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,176 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:03:45,237 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:03:45,239 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:03:45,240 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:03:45,362 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:03:46,401 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:03:46,557 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:03:46,557 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:03:46,557 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:03:46,557 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:03:46,558 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:03:46,558 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:03:46,558 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:03:46,558 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:03:46,558 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:03:46,558 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:03:46,558 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:03:46,559 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:03:46,559 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:03:46,650 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a859c5, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fc71437, org.springframework.security.web.header.HeaderWriterFilter@512dc0e0, org.springframework.security.web.authentication.logout.LogoutFilter@2337bf27, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@49353d43, org.springframework.security.web.session.ConcurrentSessionFilter@64fc6470, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@631678e6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@652a1a17, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@75f2ff80, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37083af6, org.springframework.security.web.session.SessionManagementFilter@75063bd0, org.springframework.security.web.access.ExceptionTranslationFilter@7030b74c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74a03bd5]
2022-07-09 01:03:46,831 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:03:47,201 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:03:47,383 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:03:47,434 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:03:47,436 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:03:47,439 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:03:47,528 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:03:48,239 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:03:48,484 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:03:48,543 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#2c815fdc:0/SimpleConnection@394950ad [delegate=amqp://guest@127.0.0.1:5672/, localPort= 50849]
2022-07-09 01:03:48,655 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.223 seconds (JVM running for 11.894)
2022-07-09 01:04:12,901 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:04:12,903 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:04:12,915 INFO (FrameworkServlet.java:547)- Completed initialization in 11 ms
2022-07-09 01:04:13,097 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:04:13,859 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:04:13,930 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:04:14,125 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:04:14,126 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:04:14,131 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:04:14,132 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:04:14,180 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:04:14,181 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:04:14,181 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:05:36,279 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:05:36,653 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:05:36,662 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:05:36,745 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:05:36,746 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:05:36,748 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:05:36,751 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:05:36,758 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:05:36,759 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:05:36,759 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:05:40,678 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:05:40,998 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:05:41,005 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:05:41,088 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:05:41,090 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:05:41,092 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:05:41,092 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:05:41,102 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:05:41,103 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:05:41,103 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:05:44,916 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:05:45,242 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:05:45,245 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:05:45,309 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:05:45,311 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:05:45,312 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:05:45,313 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:05:45,320 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:05:45,320 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:05:45,321 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:06:08,247 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:06:08,544 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:06:08,553 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:06:08,635 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:06:08,636 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:06:08,637 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:06:08,638 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:06:08,643 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:06:08,643 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:06:08,643 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:06:42,711 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:06:43,026 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:06:43,033 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:06:43,117 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:06:43,118 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:06:43,118 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:06:43,119 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:06:43,125 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:06:43,125 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:06:43,126 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:06:48,711 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:06:49,002 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:06:49,010 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:06:49,079 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:06:49,080 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:06:49,080 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:52) -->> 1.jwt拦截!
2022-07-09 01:06:49,081 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:78) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:06:49,086 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:06:49,086 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:06:49,087 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:07:56,994 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:07:57,656 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:07:57,659 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:07:57,675 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:07:57,728 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:07:57,732 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:07:57,732 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:07:57,732 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:07:57,897 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:07:57,901 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:07:57,927 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:07:57,929 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:07:57,944 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:07:57,945 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:08:04,591 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:08:04,688 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 57217 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:08:04,690 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:08:06,263 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:08:06,265 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:08:06,404 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 134 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:08:06,420 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:08:06,421 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:08:06,443 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:08:06,466 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:08:06,467 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:08:06,504 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:08:06,504 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 01:08:06,686 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:08:07,325 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:08:07,345 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$c8e048c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:08:07,401 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:08:07,834 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:08:07,842 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:08:07,843 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:08:07,844 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:08:07,954 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:08:07,955 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3201 ms
2022-07-09 01:08:08,303 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:08:08,747 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:08:08,757 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:08:08,804 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:08:08,804 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:08:08,805 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:08:08,805 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:08:10,064 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:08:10,068 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:08:11,793 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,797 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,797 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,797 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,797 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,798 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,798 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,798 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,799 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,799 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,799 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,799 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,799 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,799 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,799 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,800 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,800 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,800 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,801 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,801 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:08:11,864 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:08:11,867 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:08:11,867 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:08:11,993 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:08:13,062 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:08:13,221 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:08:13,222 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:08:13,222 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:08:13,222 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:08:13,222 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:08:13,222 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:08:13,222 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:08:13,223 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:08:13,223 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:08:13,223 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:08:13,223 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:08:13,223 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:08:13,224 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:08:13,313 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7cd3860, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b9d1a4, org.springframework.security.web.header.HeaderWriterFilter@43b45ce4, org.springframework.security.web.authentication.logout.LogoutFilter@5cf3a7f9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6c8ad6d7, org.springframework.security.web.session.ConcurrentSessionFilter@f6bc75c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7845ee8a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c60f096, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@c29b0dc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@44f23927, org.springframework.security.web.session.SessionManagementFilter@1835b783, org.springframework.security.web.access.ExceptionTranslationFilter@4b240276, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5487a8f1]
2022-07-09 01:08:13,500 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:08:13,871 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:08:14,064 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:08:14,116 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:08:14,118 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:08:14,121 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:08:14,210 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:08:14,865 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:08:15,171 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:08:15,221 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#405d8a80:0/SimpleConnection@48a61e38 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 52087]
2022-07-09 01:08:15,322 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.333 seconds (JVM running for 12.155)
2022-07-09 01:08:23,284 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:08:23,286 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:08:23,297 INFO (FrameworkServlet.java:547)- Completed initialization in 11 ms
2022-07-09 01:08:23,467 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:08:24,218 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:08:24,293 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:08:24,395 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:08:24,397 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:08:24,527 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:08:24,528 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:08:24,528 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:45:42,861 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:45:43,411 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:45:43,414 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:45:44,400 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:45:44,471 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:45:44,474 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:45:44,474 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:45:44,474 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:45:44,672 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:45:44,676 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:45:44,684 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:45:44,686 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:45:44,691 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:45:44,692 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:45:55,759 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:45:55,862 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 64500 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:45:55,864 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:45:57,410 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:45:57,413 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:45:57,553 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 135 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:45:57,568 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:45:57,569 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:45:57,593 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 23 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:45:57,621 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:45:57,622 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:45:57,663 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:45:57,663 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 01:45:57,817 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:45:58,439 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:45:58,458 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:45:58,509 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:45:58,894 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:45:58,915 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:45:58,916 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:45:58,917 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:45:59,028 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:45:59,030 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3104 ms
2022-07-09 01:45:59,401 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:45:59,842 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:45:59,855 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:45:59,901 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:45:59,902 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:45:59,902 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:45:59,903 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:46:01,157 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:46:01,160 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:46:02,947 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,952 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,952 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,952 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,953 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,953 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,953 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,953 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,953 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,954 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,954 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,954 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,954 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,955 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,955 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,955 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,955 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,955 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,955 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:02,956 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:03,063 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:46:03,065 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:46:03,065 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:46:03,224 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:46:04,151 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:46:04,300 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:46:04,301 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:46:04,301 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:46:04,301 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:46:04,301 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:46:04,301 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:46:04,302 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:46:04,302 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:46:04,302 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:46:04,302 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:46:04,302 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:46:04,303 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:46:04,303 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:46:04,392 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c335b9, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c60f096, org.springframework.security.web.header.HeaderWriterFilter@33f2cf82, org.springframework.security.web.authentication.logout.LogoutFilter@1b10f60e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@323eecf8, org.springframework.security.web.session.ConcurrentSessionFilter@16c8e9b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53fc870f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d0778d0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@87fc0fc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75c8d8e7, org.springframework.security.web.session.SessionManagementFilter@73852720, org.springframework.security.web.access.ExceptionTranslationFilter@1b9c716f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@dd07be8]
2022-07-09 01:46:04,576 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:46:04,950 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:46:05,126 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:46:05,172 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:46:05,174 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:46:05,177 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:46:05,263 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:46:05,902 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:46:06,172 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:46:06,245 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#365bfc5f:0/SimpleConnection@19656e21 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 61546]
2022-07-09 01:46:06,350 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.247 seconds (JVM running for 12.068)
2022-07-09 01:46:06,382 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:46:07,317 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:46:07,320 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:46:08,330 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:46:08,382 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:46:08,386 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:46:08,386 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:46:08,386 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:46:08,443 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:46:08,446 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:46:08,466 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:46:08,467 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:46:08,484 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:46:08,485 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:46:27,151 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:46:27,261 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 64627 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:46:27,264 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:46:28,790 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:46:28,793 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:46:28,932 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 134 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:46:28,948 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:46:28,949 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:46:28,971 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:46:28,993 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:46:28,994 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:46:29,030 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:46:29,031 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 01:46:29,197 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:46:29,842 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:46:29,869 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$147d469d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:46:29,921 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:46:30,344 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:46:30,355 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:46:30,357 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:46:30,358 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:46:30,451 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:46:30,451 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3117 ms
2022-07-09 01:46:30,768 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:46:31,166 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:46:31,175 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:46:31,223 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:46:31,224 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:46:31,224 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:46:31,224 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:46:32,406 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:46:32,412 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:46:33,972 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,975 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,976 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,976 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,976 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,977 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,977 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,977 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,977 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,978 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,978 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,978 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,978 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,978 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,978 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,978 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,979 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,979 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,980 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:33,980 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:46:34,045 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:46:34,047 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:46:34,047 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:46:34,157 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:46:35,153 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:46:35,307 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:46:35,307 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:46:35,307 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:46:35,307 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:46:35,307 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:46:35,308 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:46:35,308 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:46:35,308 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:46:35,308 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:46:35,309 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:46:35,309 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:46:35,309 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:46:35,309 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:46:35,399 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75c8d8e7, org.springframework.security.web.context.SecurityContextPersistenceFilter@1760e688, org.springframework.security.web.header.HeaderWriterFilter@bea283b, org.springframework.security.web.authentication.logout.LogoutFilter@4b916cc2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e02cc37, org.springframework.security.web.session.ConcurrentSessionFilter@7030b74c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f4086e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33e8694b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@671f545b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c68e82, org.springframework.security.web.session.SessionManagementFilter@22854f2b, org.springframework.security.web.access.ExceptionTranslationFilter@f6bc75c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b8fcdf2]
2022-07-09 01:46:35,577 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:46:35,957 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:46:36,134 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:46:36,180 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:46:36,182 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:46:36,185 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:46:36,265 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:46:36,825 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:46:37,040 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:46:37,080 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#1a7e799e:0/SimpleConnection@614ae4eb [delegate=amqp://guest@127.0.0.1:5672/, localPort= 61704]
2022-07-09 01:46:37,181 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.606 seconds (JVM running for 11.255)
2022-07-09 01:46:46,341 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:46:46,343 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:46:46,348 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 01:46:46,501 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:46:47,289 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:46:47,377 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:46:47,487 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:46:47,489 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:46:47,542 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:46:47,542 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:46:47,543 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:47:23,094 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:47:23,365 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:47:23,368 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:47:24,354 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:47:24,495 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:47:24,498 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:47:24,498 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:47:24,498 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:47:24,659 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:47:24,662 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:47:24,683 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:47:24,685 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:47:24,697 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:47:24,698 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:47:30,584 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:47:30,690 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 64836 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:47:30,692 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:47:32,222 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:47:32,225 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:47:32,359 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 129 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:47:32,374 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:47:32,375 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:47:32,407 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 31 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:47:32,431 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:47:32,432 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:47:32,469 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:47:32,470 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 01:47:32,636 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:47:33,262 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:47:33,279 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$147d469d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:47:33,337 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:47:33,765 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:47:33,774 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:47:33,776 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:47:33,777 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:47:33,886 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:47:33,886 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3127 ms
2022-07-09 01:47:34,236 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:47:34,667 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:47:34,677 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:47:34,724 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:47:34,725 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:47:34,725 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:47:34,726 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:47:35,974 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:47:35,978 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:47:37,609 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,613 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,613 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,614 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,614 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,614 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,614 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,615 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,615 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,615 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,615 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,615 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,616 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,616 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,616 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,616 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,616 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,616 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,617 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,617 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:47:37,679 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:47:37,681 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:47:37,685 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:47:37,798 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:47:38,823 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:47:38,966 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:47:38,966 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:47:38,966 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:47:38,966 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:47:38,967 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:47:38,967 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:47:38,967 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:47:38,967 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:47:38,967 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:47:38,967 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:47:38,968 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:47:38,968 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:47:38,968 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:47:39,059 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75c8d8e7, org.springframework.security.web.context.SecurityContextPersistenceFilter@1760e688, org.springframework.security.web.header.HeaderWriterFilter@bea283b, org.springframework.security.web.authentication.logout.LogoutFilter@4b916cc2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e02cc37, org.springframework.security.web.session.ConcurrentSessionFilter@7030b74c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f4086e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33e8694b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@671f545b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c68e82, org.springframework.security.web.session.SessionManagementFilter@22854f2b, org.springframework.security.web.access.ExceptionTranslationFilter@f6bc75c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b8fcdf2]
2022-07-09 01:47:39,247 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:47:39,608 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:47:39,780 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:47:39,826 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:47:39,829 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:47:39,831 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:47:39,924 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:47:40,558 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:47:40,798 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:47:40,858 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#1a7e799e:0/SimpleConnection@227fc322 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62012]
2022-07-09 01:47:40,957 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.948 seconds (JVM running for 11.635)
2022-07-09 01:47:42,627 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:47:42,628 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:47:42,633 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 01:47:42,795 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:47:43,545 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:47:43,624 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:47:43,717 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:47:43,719 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:47:43,769 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:47:43,770 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:47:43,770 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:49:50,985 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:49:51,473 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:49:51,476 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:49:52,483 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:49:52,549 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:49:52,552 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:49:52,552 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:49:52,552 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:49:52,710 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:49:52,713 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:49:52,738 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:49:52,739 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:49:52,754 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:49:52,755 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:49:59,487 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:49:59,578 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 65312 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:49:59,581 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:50:01,108 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:50:01,111 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:50:01,243 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 127 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:50:01,258 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:50:01,259 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:50:01,282 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:50:01,302 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:50:01,303 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:50:01,342 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:50:01,342 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 01:50:01,516 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:50:02,126 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:50:02,146 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:50:02,200 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:50:02,620 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:50:02,630 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:50:02,631 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:50:02,632 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:50:02,735 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:50:02,736 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3095 ms
2022-07-09 01:50:03,079 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:50:03,488 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:50:03,497 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:50:03,548 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:50:03,549 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:50:03,550 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:50:03,550 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:50:04,748 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:50:04,751 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:50:06,384 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,387 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,388 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,388 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,388 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,389 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,389 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,389 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,389 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,389 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,389 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,390 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,390 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,390 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,390 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,390 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,390 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,391 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,391 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,391 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:50:06,448 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:50:06,450 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:50:06,450 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:50:06,567 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:50:07,580 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:50:07,719 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:50:07,719 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:50:07,720 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:50:07,720 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:50:07,720 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:50:07,720 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:50:07,720 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:50:07,720 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:50:07,720 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:50:07,721 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:50:07,721 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:50:07,721 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:50:07,721 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:50:07,814 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@87fc0fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@1760e688, org.springframework.security.web.header.HeaderWriterFilter@bea283b, org.springframework.security.web.authentication.logout.LogoutFilter@4b916cc2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e02cc37, org.springframework.security.web.session.ConcurrentSessionFilter@7030b74c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f4086e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33e8694b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2cc97e47, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@671f545b, org.springframework.security.web.session.SessionManagementFilter@22854f2b, org.springframework.security.web.access.ExceptionTranslationFilter@f6bc75c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c9e6d95]
2022-07-09 01:50:08,000 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:50:08,381 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:50:08,565 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:50:08,618 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:50:08,620 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:50:08,624 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:50:08,714 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:50:09,352 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:50:09,638 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:50:09,693 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#365bfc5f:0/SimpleConnection@4aadf144 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62663]
2022-07-09 01:50:09,786 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.893 seconds (JVM running for 11.725)
2022-07-09 01:50:19,112 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:50:19,115 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:50:19,119 INFO (FrameworkServlet.java:547)- Completed initialization in 4 ms
2022-07-09 01:50:19,281 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception [Filter execution threw an exception] with root cause
java.lang.StackOverflowError: null
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:458)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
2022-07-09 01:50:19,304 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:50:19,305 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 01:50:26,449 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception [Filter execution threw an exception] with root cause
java.lang.StackOverflowError: null
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
2022-07-09 01:50:26,459 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:50:26,460 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 01:50:50,199 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:50:50,937 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:50:50,941 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:50:51,940 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:50:51,983 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:50:51,985 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:50:51,985 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:50:51,985 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:50:52,035 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:50:52,040 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:50:52,059 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:50:52,061 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:50:52,074 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:50:52,075 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:50:54,536 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:50:54,632 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 65495 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:50:54,635 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:50:56,199 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:50:56,202 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:50:56,338 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 131 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:50:56,353 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:50:56,354 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:50:56,379 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:50:56,400 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:50:56,401 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:50:56,440 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:50:56,441 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2022-07-09 01:50:56,613 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:50:57,258 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:50:57,278 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:50:57,328 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:50:57,778 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:50:57,787 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:50:57,789 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:50:57,789 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:50:57,885 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:50:57,886 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3184 ms
2022-07-09 01:50:58,230 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:50:58,704 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:50:58,718 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:50:58,770 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:50:58,771 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:50:58,771 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:50:58,771 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:51:00,003 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:51:00,006 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:51:01,664 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,668 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,668 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,668 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,669 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,669 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,669 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,669 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,669 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,670 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,670 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,670 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,670 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,670 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,671 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,671 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,671 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,671 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,671 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,672 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:01,736 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:51:01,738 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:51:01,738 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:51:01,858 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:51:02,887 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:51:03,030 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:51:03,030 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:51:03,030 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:51:03,030 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:51:03,031 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:51:03,031 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:51:03,031 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:51:03,031 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:51:03,031 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:51:03,032 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:51:03,032 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:51:03,032 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:51:03,032 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:51:03,126 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@87fc0fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@1760e688, org.springframework.security.web.header.HeaderWriterFilter@bea283b, org.springframework.security.web.authentication.logout.LogoutFilter@4b916cc2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e02cc37, org.springframework.security.web.session.ConcurrentSessionFilter@7030b74c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f4086e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33e8694b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2cc97e47, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@671f545b, org.springframework.security.web.session.SessionManagementFilter@22854f2b, org.springframework.security.web.access.ExceptionTranslationFilter@f6bc75c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c9e6d95]
2022-07-09 01:51:03,323 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:51:03,690 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:51:03,862 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:51:03,910 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:51:03,912 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:51:03,915 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:51:04,000 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:51:04,625 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:51:04,912 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:51:04,951 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#365bfc5f:0/SimpleConnection@37d8562f [delegate=amqp://guest@127.0.0.1:5672/, localPort= 62932]
2022-07-09 01:51:05,054 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.289 seconds (JVM running for 12.094)
2022-07-09 01:51:09,968 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:51:09,970 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:51:09,981 INFO (FrameworkServlet.java:547)- Completed initialization in 11 ms
2022-07-09 01:51:10,140 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception [Filter execution threw an exception] with root cause
java.lang.StackOverflowError: null
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:458)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$UserDetailsServiceDelegator.loadUserByUsername(WebSecurityConfigurerAdapter.java:459)
2022-07-09 01:51:10,158 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:51:10,160 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 01:51:36,398 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:51:37,153 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:51:37,155 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:51:38,147 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:51:38,190 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:51:38,192 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:51:38,192 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:51:38,192 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:51:38,261 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:51:38,265 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:51:38,291 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:51:38,293 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:51:38,306 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:51:38,307 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:51:45,741 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:51:45,830 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 65669 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:51:45,832 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:51:47,414 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:51:47,416 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:51:47,551 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 130 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:51:47,566 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:51:47,567 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:51:47,600 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 32 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:51:47,624 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:51:47,626 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:51:47,666 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:51:47,666 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 01:51:47,832 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:51:48,455 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:51:48,472 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$147d469d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:51:48,518 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:51:48,966 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:51:48,974 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:51:48,976 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:51:48,976 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:51:49,078 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:51:49,079 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3179 ms
2022-07-09 01:51:49,392 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:51:49,851 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:51:49,861 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:51:49,913 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:51:49,914 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:51:49,914 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:51:49,914 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:51:51,576 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:51:51,580 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:51:53,060 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,064 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,064 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,065 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,065 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,066 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,067 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,067 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,067 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,067 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,068 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,068 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,068 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,069 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,069 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,069 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,070 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:51:53,139 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:51:53,141 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:51:53,142 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:51:53,266 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:51:54,347 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:51:54,490 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:51:54,491 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:51:54,491 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:51:54,491 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:51:54,491 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:51:54,491 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:51:54,491 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:51:54,492 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:51:54,492 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:51:54,492 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:51:54,492 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:51:54,492 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:51:54,492 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:51:54,575 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1bde9a22, org.springframework.security.web.context.SecurityContextPersistenceFilter@5f35370b, org.springframework.security.web.header.HeaderWriterFilter@5ddf5118, org.springframework.security.web.authentication.logout.LogoutFilter@4fc71437, com.ve.blog.handler.JwtAuthenticationTokenFilter@2154652c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1344f7fe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7030b74c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f4086e, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2d3eb1ea, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2cc97e47, org.springframework.security.web.session.SessionManagementFilter@fcd3a6f, org.springframework.security.web.access.ExceptionTranslationFilter@22854f2b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@33765d22]
2022-07-09 01:51:54,760 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:51:55,118 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:51:55,288 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:51:55,337 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:51:55,339 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:51:55,341 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:51:55,430 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:51:56,115 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:51:56,345 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:51:56,394 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#769b0752:0/SimpleConnection@69ae7632 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 63196]
2022-07-09 01:51:56,493 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.576 seconds (JVM running for 12.473)
2022-07-09 01:52:02,194 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:52:02,196 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:52:02,213 INFO (FrameworkServlet.java:547)- Completed initialization in 17 ms
2022-07-09 01:52:02,255 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 01:52:02,256 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:79) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:52:02,408 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:52:03,385 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:52:03,387 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:52:03.276)----
2022-07-09 01:52:03,458 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:52:03.276)----
2022-07-09 01:52:03,459 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:52:03.276)----
2022-07-09 01:52:03,459 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:52:03.276)----
2022-07-09 01:52:03,460 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:52:03.276)----
2022-07-09 01:52:03,475 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:52:03,671 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 01:52:03,673 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:79) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:52:03,679 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:52:03,680 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:52:03,729 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> anonymousUser----
2022-07-09 01:52:03,741 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:52:03,751 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:52:03,751 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 01:53:27,670 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:53:27,849 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:53:27,851 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 01:53:28,835 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 01:53:28,909 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 01:53:28,911 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:53:28,911 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 01:53:28,911 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 01:53:29,085 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 01:53:29,090 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 01:53:29,113 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 01:53:29,114 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 01:53:29,127 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 01:53:29,128 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 01:53:35,899 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 01:53:35,996 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 66041 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 01:53:36,000 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 01:53:37,627 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:53:37,630 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:53:37,763 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 128 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 01:53:37,777 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:53:37,778 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 01:53:37,800 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 01:53:37,821 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 01:53:37,822 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 01:53:37,860 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 01:53:37,860 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 01:53:38,043 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 01:53:38,685 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:53:38,707 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2f26612a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:53:38,768 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 01:53:39,223 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 01:53:39,234 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:53:39,235 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 01:53:39,236 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 01:53:39,344 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 01:53:39,346 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3278 ms
2022-07-09 01:53:39,686 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 01:53:40,145 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 01:53:40,157 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 01:53:40,207 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 01:53:40,207 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 01:53:40,207 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 01:53:40,208 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 01:53:41,826 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 01:53:41,829 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 01:53:43,244 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,249 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,249 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,249 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,250 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,250 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,250 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,250 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,251 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,251 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,251 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,251 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,251 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,252 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,252 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,252 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,252 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,252 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,252 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,253 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 01:53:43,313 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 01:53:43,314 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 01:53:43,315 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 01:53:43,461 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 01:53:44,637 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 01:53:44,807 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 01:53:44,808 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 01:53:44,808 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 01:53:44,808 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 01:53:44,808 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 01:53:44,808 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 01:53:44,808 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 01:53:44,809 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 01:53:44,809 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 01:53:44,809 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 01:53:44,809 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 01:53:44,809 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 01:53:44,809 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 01:53:44,908 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@25435731, org.springframework.security.web.context.SecurityContextPersistenceFilter@186d6033, org.springframework.security.web.header.HeaderWriterFilter@6bd2f039, org.springframework.security.web.authentication.logout.LogoutFilter@6aa9a93b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3b046e64, org.springframework.security.web.session.ConcurrentSessionFilter@4b916cc2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@69419d59, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@147059f8, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@320fc4b0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10301d6f, org.springframework.security.web.session.SessionManagementFilter@2d0778d0, org.springframework.security.web.access.ExceptionTranslationFilter@5cf3a7f9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3831f4c2]
2022-07-09 01:53:45,099 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 01:53:45,499 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 01:53:45,678 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 01:53:45,729 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 01:53:45,731 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 01:53:45,734 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 01:53:45,824 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 01:53:46,460 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 01:53:46,730 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 01:53:46,779 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#517fbf62:0/SimpleConnection@58c16efd [delegate=amqp://guest@127.0.0.1:5672/, localPort= 63749]
2022-07-09 01:53:46,887 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.676 seconds (JVM running for 12.437)
2022-07-09 01:54:11,469 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 01:54:11,471 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 01:54:11,488 INFO (FrameworkServlet.java:547)- Completed initialization in 17 ms
2022-07-09 01:54:11,655 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 01:54:12,555 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 01:54:12,558 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:54:12.432)----
2022-07-09 01:54:12,620 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:54:12.432)----
2022-07-09 01:54:12,635 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:54:12.432)----
2022-07-09 01:54:12,636 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:54:12.432)----
2022-07-09 01:54:12,636 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T01:54:12.432)----
2022-07-09 01:54:12,654 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 01:54:12,832 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 01:54:12,834 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 01:54:12,844 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 01:54:12,845 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:79) -->> 无令牌或令牌格式不正确-->null
2022-07-09 01:54:12,909 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> anonymousUser----
2022-07-09 01:54:12,920 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 01:54:12,921 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 01:54:12,921 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:09:37,148 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:09:37,640 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:09:37,643 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:09:37,664 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:09:37,728 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:09:37,730 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:09:37,730 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:09:37,730 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:09:37,922 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:09:37,927 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:09:37,952 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:09:37,954 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:09:37,968 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:09:37,969 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:09:45,032 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:09:45,130 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 69241 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:09:45,132 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:09:46,692 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:09:46,694 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:09:46,827 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 128 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:09:46,841 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:09:46,842 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:09:46,864 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:09:46,886 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:09:46,887 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:09:46,932 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:09:46,933 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
2022-07-09 02:09:47,103 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:09:47,781 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:09:47,809 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$13acd81f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:09:47,871 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:09:48,256 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:09:48,277 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:09:48,280 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:09:48,280 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:09:48,397 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:09:48,398 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3211 ms
2022-07-09 02:09:48,738 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:09:49,159 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:09:49,168 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:09:49,216 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:09:49,217 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:09:49,217 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:09:49,217 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:09:50,736 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:09:50,740 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:09:52,234 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,239 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,239 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,239 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,239 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,240 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,240 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,240 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,240 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,240 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,240 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,241 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,241 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,241 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,241 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,242 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,242 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,242 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,242 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,242 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:09:52,323 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:09:52,324 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:09:52,324 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:09:52,455 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:09:53,426 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:09:53,581 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:09:53,582 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:09:53,582 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:09:53,582 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:09:53,582 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:09:53,583 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:09:53,583 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:09:53,583 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:09:53,583 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:09:53,583 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:09:53,584 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:09:53,584 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:09:53,584 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:09:53,674 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8ecc457, org.springframework.security.web.context.SecurityContextPersistenceFilter@69419d59, org.springframework.security.web.header.HeaderWriterFilter@2d0778d0, org.springframework.security.web.authentication.logout.LogoutFilter@14b9df65, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7bd694a5, org.springframework.security.web.session.ConcurrentSessionFilter@323eecf8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@96075c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@838e109, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1ecec098, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21d3d6ec, org.springframework.security.web.session.SessionManagementFilter@4fc71437, org.springframework.security.web.access.ExceptionTranslationFilter@6bd2f039, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c4aa701]
2022-07-09 02:09:53,870 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:09:54,268 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:09:54,455 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:09:54,529 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:09:54,532 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:09:54,534 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:09:54,616 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:09:55,228 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:09:55,465 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:09:55,512 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#59a94d0f:0/SimpleConnection@8d52313 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 51531]
2022-07-09 02:09:55,606 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.162 seconds (JVM running for 11.94)
2022-07-09 02:10:02,307 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:10:02,595 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:10:02,598 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:10:02,599 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:10:02,633 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:10:02,636 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:10:02,637 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:10:02,637 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:10:02,700 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:10:02,703 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:10:02,725 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:10:02,726 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:10:02,738 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:10:02,740 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:10:09,084 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:10:09,186 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 69322 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:10:09,189 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:10:10,722 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:10:10,725 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:10:10,865 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 135 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:10:10,880 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:10:10,880 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:10:10,902 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:10:10,922 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:10:10,925 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:10:10,965 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:10:10,966 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 31 ms. Found 0 Redis repository interfaces.
2022-07-09 02:10:11,141 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:10:11,772 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:10:11,790 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$2f26612a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:10:11,841 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:10:12,261 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:10:12,269 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:10:12,271 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:10:12,271 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:10:12,368 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:10:12,369 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3120 ms
2022-07-09 02:10:12,687 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:10:13,095 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:10:13,105 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:10:13,150 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:10:13,150 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:10:13,151 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:10:13,151 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:10:14,647 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:10:14,650 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:10:16,025 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,029 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,030 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,030 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,031 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,031 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,031 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,031 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,032 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,032 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,032 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,032 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,032 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,033 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,033 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,033 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,033 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,033 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,033 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,033 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:10:16,091 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:10:16,094 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:10:16,095 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:10:16,216 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:10:17,244 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:10:17,392 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:10:17,392 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:10:17,392 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:10:17,392 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:10:17,392 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:10:17,392 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:10:17,393 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:10:17,393 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:10:17,393 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:10:17,393 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:10:17,394 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:10:17,394 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:10:17,394 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:10:17,483 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8ecc457, org.springframework.security.web.context.SecurityContextPersistenceFilter@69419d59, org.springframework.security.web.header.HeaderWriterFilter@2d0778d0, org.springframework.security.web.authentication.logout.LogoutFilter@14b9df65, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7bd694a5, org.springframework.security.web.session.ConcurrentSessionFilter@323eecf8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@96075c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@838e109, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1ecec098, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21d3d6ec, org.springframework.security.web.session.SessionManagementFilter@4fc71437, org.springframework.security.web.access.ExceptionTranslationFilter@6bd2f039, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c4aa701]
2022-07-09 02:10:17,664 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:10:18,031 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:10:18,205 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:10:18,257 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:10:18,259 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:10:18,262 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:10:18,348 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:10:18,959 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:10:19,252 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:10:19,284 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#517fbf62:0/SimpleConnection@57abe94d [delegate=amqp://guest@127.0.0.1:5672/, localPort= 51660]
2022-07-09 02:10:19,383 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.983 seconds (JVM running for 11.678)
2022-07-09 02:11:01,206 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:11:01,208 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:11:01,220 INFO (FrameworkServlet.java:547)- Completed initialization in 12 ms
2022-07-09 02:11:01,370 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:11:01,411 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:11:01,417 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:13:22,374 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:13:22,384 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:13:22,387 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:13:31,869 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:13:31,873 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 02:13:31,882 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:31,883 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 02:13:33,984 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:33,987 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:13:39,030 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:39,045 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:13:46,128 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:46,132 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:13:47,709 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:47,718 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:13:48,266 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:48,268 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:13:48,511 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:48,513 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:13:54,546 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:13:54,549 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:19,122 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:14:19,339 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:14:19,342 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:14:20,334 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:14:20,387 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:14:20,389 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:14:20,389 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:14:20,389 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:14:20,441 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:14:20,443 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:14:20,470 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:14:20,472 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:14:20,486 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:14:20,487 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:14:27,234 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:14:27,323 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 70167 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:14:27,325 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:14:28,825 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:14:28,827 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:14:28,961 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 129 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:14:28,975 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:14:28,975 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:14:28,998 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:14:29,017 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:14:29,020 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:14:29,066 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:14:29,067 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 33 ms. Found 0 Redis repository interfaces.
2022-07-09 02:14:29,227 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:14:29,904 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:14:29,924 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$13acd81f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:14:29,974 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:14:30,402 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:14:30,412 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:14:30,413 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:14:30,413 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:14:30,526 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:14:30,527 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3137 ms
2022-07-09 02:14:30,843 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:14:31,279 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:14:31,289 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:14:31,336 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:14:31,336 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:14:31,336 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:14:31,337 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:14:32,881 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:14:32,885 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:14:34,319 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,322 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,323 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,324 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,324 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,324 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,324 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,324 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,325 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,325 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,326 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,326 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,326 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,326 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,326 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,326 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,327 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,327 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,327 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,327 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:14:34,393 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:14:34,395 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:14:34,395 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:14:34,517 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:14:35,593 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:14:35,743 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:14:35,743 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:14:35,743 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:14:35,743 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:14:35,743 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:14:35,743 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:14:35,744 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:14:35,744 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:14:35,744 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:14:35,744 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:14:35,745 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:14:35,745 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:14:35,745 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:14:35,847 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8ecc457, org.springframework.security.web.context.SecurityContextPersistenceFilter@69419d59, org.springframework.security.web.header.HeaderWriterFilter@2d0778d0, org.springframework.security.web.authentication.logout.LogoutFilter@14b9df65, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7bd694a5, org.springframework.security.web.session.ConcurrentSessionFilter@323eecf8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@96075c0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@838e109, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@1ecec098, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21d3d6ec, org.springframework.security.web.session.SessionManagementFilter@4fc71437, org.springframework.security.web.access.ExceptionTranslationFilter@6bd2f039, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1c4aa701]
2022-07-09 02:14:36,029 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:14:36,397 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:14:36,578 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:14:36,626 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:14:36,629 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:14:36,631 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:14:36,718 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:14:37,403 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:14:37,730 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:14:37,818 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#59a94d0f:0/SimpleConnection@8d52313 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 52787]
2022-07-09 02:14:37,932 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.344 seconds (JVM running for 12.172)
2022-07-09 02:14:44,653 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:14:44,656 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:14:44,661 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 02:14:44,678 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,679 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,741 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,744 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,932 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,932 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,933 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,933 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,949 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,949 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,949 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,951 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,951 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,951 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,951 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,951 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,959 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,960 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,965 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,968 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,969 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,969 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,975 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,975 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,975 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,975 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,976 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,977 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,977 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,977 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,981 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,981 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,987 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,990 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,992 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,993 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:44,993 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:44,993 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:45,275 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:45,276 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:45,366 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:45,367 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:45,767 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:14:45,770 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:14:48,162 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:14:48,196 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:14:48,201 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:14:53,478 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:14:53,483 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:14:53,485 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:15:04,687 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,688 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:04,688 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,689 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:04,689 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,690 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:04,688 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,696 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:04,738 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,738 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,738 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,739 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:04,739 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:04,739 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:04,748 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:04,749 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:05,700 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:05,701 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:05,701 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:05,701 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:05,700 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:05,707 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:07,403 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:15:07,404 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 02:15:07,410 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:07,410 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 02:15:07,529 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> POST
2022-07-09 02:15:07,530 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:15:07,530 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:15:07,561 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:07,561 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->null
2022-07-09 02:15:28,103 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:15:28,105 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 02:15:28,106 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:28,107 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 02:15:28,112 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> POST
2022-07-09 02:15:28,113 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:15:28,119 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:15:40,828 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:15:40,830 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 02:15:40,832 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:40,834 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 02:15:40,876 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:199) -->> 用户名：admin@qq.com
2022-07-09 02:15:40,878 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:200) -->> 密码：123456
2022-07-09 02:15:40,884 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:15:52,203 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:15:52,209 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 02:15:52,210 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:53) -->> 1.jwt拦截!
2022-07-09 02:15:52,210 INFO (LogUtil.java:32)- doFilterInternal(JwtAuthenticationTokenFilter.java:80) -->> 无令牌或令牌格式不正确-->wdq
2022-07-09 02:15:52,222 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:199) -->> 用户名：admin@qq.com
2022-07-09 02:15:52,223 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:200) -->> 密码：1234567
2022-07-09 02:15:52,223 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:16:04,939 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:16:04,944 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:16:04,950 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:16:24,737 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:16:25,362 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:16:25,369 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:16:26,352 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:16:26,417 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:16:26,419 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:16:26,420 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:16:26,420 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:16:26,595 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:16:26,599 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:16:26,620 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:16:26,623 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:16:26,636 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:16:26,637 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:16:33,841 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:16:33,934 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 70581 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:16:33,936 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:16:35,688 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:16:35,691 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:16:35,826 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 131 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:16:35,841 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:16:35,842 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:16:35,866 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 24 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:16:35,891 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:16:35,892 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:16:35,931 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:16:35,931 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 02:16:36,105 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:16:36,692 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:16:36,710 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:16:36,757 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:16:37,272 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:16:37,283 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:16:37,284 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:16:37,284 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:16:37,393 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:16:37,395 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3364 ms
2022-07-09 02:16:37,738 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:16:38,153 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:16:38,162 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:16:38,210 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:16:38,211 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:16:38,211 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:16:38,211 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:16:39,558 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:16:39,561 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:16:41,334 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,338 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,339 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,339 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,340 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,340 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,340 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,340 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,341 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,341 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,341 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,341 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,341 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,342 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,342 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,342 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,342 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,342 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,342 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,343 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:16:41,405 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:16:41,406 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:16:41,407 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:16:41,546 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:16:42,659 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:16:42,838 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:16:42,839 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:16:42,839 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:16:42,839 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:16:42,839 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:16:42,840 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:16:42,840 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:16:42,840 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:16:42,840 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:16:42,840 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:16:42,840 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:16:42,841 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:16:42,841 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:16:42,945 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26feccf7, org.springframework.security.web.context.SecurityContextPersistenceFilter@53fc870f, org.springframework.security.web.header.HeaderWriterFilter@73852720, org.springframework.security.web.authentication.logout.LogoutFilter@7f5e9949, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6e355249, org.springframework.security.web.session.ConcurrentSessionFilter@27d6267e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43cbafa6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fc71437, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3a8ead9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c8b37a8, org.springframework.security.web.session.SessionManagementFilter@7ae0a26, org.springframework.security.web.access.ExceptionTranslationFilter@33f2cf82, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43de9fc9]
2022-07-09 02:16:43,139 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:16:43,518 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:16:43,700 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:16:43,753 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:16:43,755 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:16:43,758 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:16:43,843 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:16:44,514 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:16:44,779 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:16:44,837 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#365bfc5f:0/SimpleConnection@68a97fc1 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 53383]
2022-07-09 02:16:44,938 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.706 seconds (JVM running for 12.514)
2022-07-09 02:16:54,885 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:16:54,886 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:16:54,898 INFO (FrameworkServlet.java:547)- Completed initialization in 11 ms
2022-07-09 02:16:55,052 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:16:55,096 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:16:55,101 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:17:04,613 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:17:04,973 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:17:04,976 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:17:04,987 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:17:05,032 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:17:05,033 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:17:05,033 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:17:05,034 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:17:05,097 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:17:05,101 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:17:05,133 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:17:05,134 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:17:05,161 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:17:05,163 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:17:13,835 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:17:13,936 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 70714 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:17:13,937 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:17:15,481 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:17:15,484 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:17:15,622 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 133 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:17:15,637 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:17:15,638 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:17:15,661 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:17:15,686 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:17:15,688 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:17:15,727 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:17:15,727 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 02:17:15,900 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:17:16,507 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:17:16,521 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$147d469d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:17:16,580 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:17:16,996 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:17:17,004 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:17:17,005 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:17:17,005 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:17:17,111 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:17:17,112 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3098 ms
2022-07-09 02:17:17,453 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:17:17,879 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:17:17,891 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:17:17,935 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:17:17,936 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:17:17,936 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:17:17,937 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:17:19,232 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:17:19,235 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:17:20,860 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,864 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,865 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,865 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,865 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,865 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,866 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,866 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,866 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,866 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,866 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,866 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,867 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,867 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,867 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,867 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,867 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,867 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,867 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,868 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:17:20,927 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:17:20,928 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:17:20,928 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:17:21,036 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:17:22,055 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:17:22,186 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:17:22,186 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:17:22,187 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:17:22,187 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:17:22,187 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:17:22,187 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:17:22,187 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:17:22,187 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:17:22,188 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:17:22,188 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:17:22,188 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:17:22,188 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:17:22,188 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:17:22,275 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c8b37a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@18f4086e, org.springframework.security.web.header.HeaderWriterFilter@22854f2b, org.springframework.security.web.authentication.logout.LogoutFilter@323eecf8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@652a1a17, org.springframework.security.web.session.ConcurrentSessionFilter@512dc0e0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@538f45f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75c15f76, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@281ca256, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3831f4c2, org.springframework.security.web.session.SessionManagementFilter@5ddf5118, org.springframework.security.web.access.ExceptionTranslationFilter@bea283b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d3eb1ea]
2022-07-09 02:17:22,464 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:17:22,824 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:17:22,995 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:17:23,043 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:17:23,046 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:17:23,048 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:17:23,128 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:17:23,754 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:17:23,990 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:17:24,025 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#1a7e799e:0/SimpleConnection@227fc322 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 53585]
2022-07-09 02:17:24,124 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.855 seconds (JVM running for 11.537)
2022-07-09 02:17:40,012 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:17:40,015 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:17:40,030 INFO (FrameworkServlet.java:547)- Completed initialization in 15 ms
2022-07-09 02:17:40,181 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:17:40,224 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:17:40,229 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:19:05,405 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:19:05,497 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:19:05,499 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:19:06,500 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:19:06,556 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:19:06,558 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:19:06,558 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:19:06,558 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:19:06,624 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:19:06,628 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:19:06,646 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:19:06,647 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:19:06,662 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:19:06,664 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:19:13,488 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:19:13,572 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 71102 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:19:13,575 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:19:15,122 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:19:15,125 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:19:15,253 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 123 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:19:15,269 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:19:15,270 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:19:15,292 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:19:15,315 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:19:15,316 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:19:15,355 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:19:15,356 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 02:19:15,535 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:19:16,163 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:19:16,181 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:19:16,234 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:19:16,661 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:19:16,672 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:19:16,674 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:19:16,674 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:19:16,777 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:19:16,777 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3136 ms
2022-07-09 02:19:17,119 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:19:17,542 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:19:17,551 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:19:17,603 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:19:17,604 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:19:17,604 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:19:17,605 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:19:18,839 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:19:18,842 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:19:20,490 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,494 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,494 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,494 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,494 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,495 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,495 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,495 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,495 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,496 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,496 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,496 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,496 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,496 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,496 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,497 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,497 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,497 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,497 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,497 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:19:20,558 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:19:20,560 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:19:20,560 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:19:20,682 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:19:21,685 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:19:21,824 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:19:21,824 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:19:21,824 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:19:21,824 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:19:21,825 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:19:21,825 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:19:21,825 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:19:21,825 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:19:21,825 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:19:21,825 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:19:21,826 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:19:21,826 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:19:21,826 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:19:21,914 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26feccf7, org.springframework.security.web.context.SecurityContextPersistenceFilter@53fc870f, org.springframework.security.web.header.HeaderWriterFilter@73852720, org.springframework.security.web.authentication.logout.LogoutFilter@7f5e9949, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6e355249, org.springframework.security.web.session.ConcurrentSessionFilter@27d6267e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43cbafa6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fc71437, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@3a8ead9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c8b37a8, org.springframework.security.web.session.SessionManagementFilter@7ae0a26, org.springframework.security.web.access.ExceptionTranslationFilter@33f2cf82, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@43de9fc9]
2022-07-09 02:19:22,102 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:19:22,467 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:19:22,643 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:19:22,695 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:19:22,697 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:19:22,700 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:19:22,789 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:19:23,343 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:19:23,587 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:19:23,688 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#365bfc5f:0/SimpleConnection@227fc322 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 54118]
2022-07-09 02:19:23,783 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.919 seconds (JVM running for 11.794)
2022-07-09 02:19:37,317 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:19:37,320 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:19:37,325 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 02:19:37,458 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:19:37,470 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:19:37,475 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:20:38,772 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:20:38,776 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 02:20:39,103 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:199) -->> 用户名：admin@qq.com
2022-07-09 02:20:39,106 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:200) -->> 密码：1234567
2022-07-09 02:20:39,110 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:20:57,480 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:20:57,484 ERROR (AbstractAuthenticationProcessingFilter.java:235)- An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: null
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:133)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:201)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:85)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException: null
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:63)
	at com.ve.blog.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:37)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:93)
	... 54 common frames omitted
2022-07-09 02:20:57,485 INFO (LogUtil.java:32)- onAuthenticationFailure(AuthenticationFailHandlerImpl.java:25) -->> 登录失败！
2022-07-09 02:22:00,444 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:22:01,441 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:22:01,449 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:22:02,416 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:22:02,489 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:22:02,492 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:22:02,492 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:22:02,492 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:22:02,666 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:22:02,670 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:22:02,696 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:22:02,697 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:22:02,712 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:22:02,714 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:22:09,387 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:22:09,494 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 71676 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:22:09,496 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:22:11,027 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:22:11,029 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:22:11,164 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 129 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:22:11,179 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:22:11,180 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:22:11,203 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 23 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:22:11,224 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:22:11,225 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:22:11,266 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:22:11,267 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 29 ms. Found 0 Redis repository interfaces.
2022-07-09 02:22:11,433 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:22:12,064 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:22:12,083 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$5d7e4433] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:22:12,136 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:22:12,574 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:22:12,583 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:22:12,585 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:22:12,585 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:22:12,689 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:22:12,689 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3133 ms
2022-07-09 02:22:13,023 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:22:13,449 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:22:13,458 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:22:13,503 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:22:13,503 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:22:13,504 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:22:13,504 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:22:14,693 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:22:14,696 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:22:16,392 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,396 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,397 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,397 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,398 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,398 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,398 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,398 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,399 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,399 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,399 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,399 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,400 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,400 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,400 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,400 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,400 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,401 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,401 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,401 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:22:16,460 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:22:16,462 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:22:16,462 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:22:16,577 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:22:17,639 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:22:17,794 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:22:17,794 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:22:17,794 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:22:17,795 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:22:17,795 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:22:17,795 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:22:17,795 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:22:17,795 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:22:17,796 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:22:17,796 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:22:17,796 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:22:17,797 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:22:17,797 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:22:17,891 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3831f4c2, org.springframework.security.web.context.SecurityContextPersistenceFilter@1760e688, org.springframework.security.web.header.HeaderWriterFilter@bea283b, org.springframework.security.web.authentication.logout.LogoutFilter@4b916cc2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2e02cc37, org.springframework.security.web.session.ConcurrentSessionFilter@7030b74c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@18f4086e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33e8694b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@26feccf7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@75f2ff80, org.springframework.security.web.session.SessionManagementFilter@22854f2b, org.springframework.security.web.access.ExceptionTranslationFilter@f6bc75c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78508e6b]
2022-07-09 02:22:18,070 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:22:18,457 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:22:18,639 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:22:18,689 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:22:18,691 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:22:18,694 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:22:18,780 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:22:19,410 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:22:19,699 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:22:19,751 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#365bfc5f:0/SimpleConnection@18c26588 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 54886]
2022-07-09 02:22:19,854 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.05 seconds (JVM running for 11.847)
2022-07-09 02:22:24,472 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:22:24,474 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:22:24,479 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 02:22:24,630 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:22:25,351 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:22:25,357 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:22:25.226)----
2022-07-09 02:22:25,435 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:22:25.226)----
2022-07-09 02:22:25,436 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:22:25.226)----
2022-07-09 02:22:25,436 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:22:25.226)----
2022-07-09 02:22:25,436 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:22:25.226)----
2022-07-09 02:22:25,449 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:22:25,637 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:22:25,640 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:22:25,687 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> anonymousUser----
2022-07-09 02:22:25,695 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:22:25,695 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:22:25,695 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:24:17,233 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:24:17,583 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:24:17,584 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:24:17.473)----
2022-07-09 02:24:17,589 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:24:17.473)----
2022-07-09 02:24:17,589 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:24:17.473)----
2022-07-09 02:24:17,590 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:24:17.473)----
2022-07-09 02:24:17,590 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:24:17.473)----
2022-07-09 02:24:17,594 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:24:17,682 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:24:17,684 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:24:17,689 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:23) -->> anonymousUser----
2022-07-09 02:24:17,691 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:24:17,691 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:24:17,692 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:30:27,922 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:30:28,818 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:30:28,822 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:30:29,804 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:30:29,878 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:30:29,880 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:30:29,881 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:30:29,881 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:30:30,045 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:30:30,049 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:30:30,072 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:30:30,074 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:30:30,090 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:30:30,092 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:30:36,704 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:30:36,806 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 73350 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:30:36,809 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:30:38,409 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:30:38,413 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:30:38,545 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 127 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:30:38,560 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:30:38,561 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:30:38,592 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 30 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:30:38,615 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:30:38,616 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:30:38,654 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:30:38,655 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 02:30:38,820 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:30:39,462 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:30:39,477 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e6bd0e21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:30:39,532 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:30:39,980 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:30:39,992 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:30:39,994 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:30:39,995 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:30:40,094 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:30:40,095 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3220 ms
2022-07-09 02:30:40,455 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:30:40,926 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:30:40,936 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:30:40,990 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:30:40,990 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:30:40,991 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:30:40,991 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:30:42,349 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:30:42,352 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:30:44,227 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,231 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,231 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,231 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,232 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,232 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,232 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,232 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,232 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,232 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,233 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,233 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,233 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,233 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,233 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,233 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,234 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,234 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,234 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,234 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:30:44,300 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:30:44,302 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:30:44,303 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:30:44,430 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:30:45,568 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:30:45,737 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:30:45,737 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:30:45,737 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:30:45,737 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:30:45,738 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:30:45,738 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:30:45,738 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:30:45,738 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:30:45,738 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:30:45,739 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:30:45,739 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:30:45,739 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:30:45,739 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:30:45,843 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c8b37a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c60f096, org.springframework.security.web.header.HeaderWriterFilter@33f2cf82, org.springframework.security.web.authentication.logout.LogoutFilter@1b10f60e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@323eecf8, org.springframework.security.web.session.ConcurrentSessionFilter@16c8e9b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53fc870f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d0778d0, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@281ca256, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3831f4c2, org.springframework.security.web.session.SessionManagementFilter@73852720, org.springframework.security.web.access.ExceptionTranslationFilter@1b9c716f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d3eb1ea]
2022-07-09 02:30:46,025 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:30:46,416 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:30:46,600 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:30:46,653 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:30:46,655 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:30:46,659 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:30:46,790 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:30:47,433 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:30:47,670 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:30:47,730 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#ac4e690:0/SimpleConnection@227fc322 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 57224]
2022-07-09 02:30:47,835 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.757 seconds (JVM running for 12.561)
2022-07-09 02:30:59,837 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:30:59,839 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:30:59,857 INFO (FrameworkServlet.java:547)- Completed initialization in 18 ms
2022-07-09 02:31:00,028 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:31:00,864 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:31:00,868 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:31:00.665)----
2022-07-09 02:31:00,928 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:31:00.665)----
2022-07-09 02:31:00,929 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:31:00.665)----
2022-07-09 02:31:00,929 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:31:00.665)----
2022-07-09 02:31:00,929 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:31:00.665)----
2022-07-09 02:31:00,942 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:31:01,046 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:31:01,048 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:31:01,092 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> anonymousUser----
2022-07-09 02:31:01,100 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:31:01,100 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:31:01,100 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:31:20,454 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:31:20,458 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/roles ，设置默认角色：游客
2022-07-09 02:32:10,964 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:32:10,967 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:32:10,985 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:31:00.665)----
2022-07-09 02:34:18,363 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:34:18,718 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:34:18,719 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:18.606)----
2022-07-09 02:34:18,724 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:18.606)----
2022-07-09 02:34:18,725 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:18.606)----
2022-07-09 02:34:18,725 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:18.606)----
2022-07-09 02:34:18,725 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:18.606)----
2022-07-09 02:34:18,729 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:34:18,809 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:34:18,811 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:34:18,819 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> anonymousUser----
2022-07-09 02:34:18,821 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:34:18,822 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:34:18,822 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:34:31,710 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:34:31,713 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:34:31,721 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:18.606)----
2022-07-09 02:34:51,416 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:34:51,701 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:34:51,702 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:51.586)----
2022-07-09 02:34:51,704 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:51.586)----
2022-07-09 02:34:51,704 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:51.586)----
2022-07-09 02:34:51,704 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:51.586)----
2022-07-09 02:34:51,704 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:34:51.586)----
2022-07-09 02:34:51,706 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:34:51,772 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:34:51,774 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:34:51,779 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> anonymousUser----
2022-07-09 02:34:51,781 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:34:51,781 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:34:51,781 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:36:56,988 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:36:57,319 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:36:57,322 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:36:58,309 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:36:58,386 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:36:58,389 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:36:58,389 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:36:58,389 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:36:58,573 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:36:58,577 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:36:58,601 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:36:58,603 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:36:58,616 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:36:58,617 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:37:05,524 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:37:05,616 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 74600 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:37:05,617 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:37:07,061 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:37:07,064 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:37:07,197 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 128 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:37:07,211 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:37:07,212 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:37:07,236 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 23 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:37:07,256 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:37:07,257 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:37:07,297 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:37:07,298 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2022-07-09 02:37:07,454 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:37:08,044 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:37:08,067 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$e6bd0e21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:37:08,124 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:37:08,546 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:37:08,557 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:37:08,559 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:37:08,559 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:37:08,695 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:37:08,695 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3019 ms
2022-07-09 02:37:09,056 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:37:09,530 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:37:09,540 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:37:09,596 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:37:09,598 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:37:09,598 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:37:09,598 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:37:10,943 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:37:10,946 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:37:12,726 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,731 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,731 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,732 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,732 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,732 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,732 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,732 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,733 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,733 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,733 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,733 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,734 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,734 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,734 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,734 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,734 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,735 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,735 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,735 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:37:12,797 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:37:12,799 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:37:12,799 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:37:12,911 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:37:14,073 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:37:14,224 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:37:14,224 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:37:14,224 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:37:14,224 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:37:14,225 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:37:14,225 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:37:14,225 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:37:14,225 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:37:14,225 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:37:14,226 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:37:14,226 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:37:14,226 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:37:14,226 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:37:14,328 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@281ca256, org.springframework.security.web.context.SecurityContextPersistenceFilter@75063bd0, org.springframework.security.web.header.HeaderWriterFilter@1b9c716f, org.springframework.security.web.authentication.logout.LogoutFilter@1344f7fe, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b916cc2, org.springframework.security.web.session.ConcurrentSessionFilter@7845ee8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c60f096, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6bd2f039, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@342dc040, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@26feccf7, org.springframework.security.web.session.SessionManagementFilter@33f2cf82, org.springframework.security.web.access.ExceptionTranslationFilter@3601549f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@59cde35]
2022-07-09 02:37:14,513 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:37:14,902 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:37:15,093 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:37:15,146 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:37:15,148 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:37:15,152 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:37:15,240 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:37:15,942 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:37:16,171 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:37:16,223 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#ac4e690:0/SimpleConnection@4aadf144 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 58944]
2022-07-09 02:37:16,331 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.386 seconds (JVM running for 12.301)
2022-07-09 02:37:25,598 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:37:25,600 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:37:25,605 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 02:37:25,760 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:37:26,551 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:37:26,555 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:37:26.426)----
2022-07-09 02:37:26,622 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:37:26.426)----
2022-07-09 02:37:26,624 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:37:26.426)----
2022-07-09 02:37:26,624 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:37:26.426)----
2022-07-09 02:37:26,624 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:37:26.426)----
2022-07-09 02:37:26,640 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:37:26,742 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:37:26,743 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:37:26,797 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> anonymousUser----
2022-07-09 02:37:26,814 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:37:26,815 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:37:26,815 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:40:12,800 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:40:13,094 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:40:13,100 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 02:40:14,089 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 02:40:14,161 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 02:40:14,165 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:40:14,165 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 02:40:14,165 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 02:40:14,347 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 02:40:14,351 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 02:40:14,381 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 02:40:14,383 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 02:40:14,399 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 02:40:14,400 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 02:40:21,069 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 02:40:21,170 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 75247 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 02:40:21,172 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 02:40:22,709 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:40:22,712 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:40:22,847 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 130 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 02:40:22,862 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:40:22,863 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 02:40:22,886 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 02:40:22,909 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 02:40:22,910 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 02:40:22,949 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 02:40:22,949 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 02:40:23,114 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 02:40:23,718 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:40:23,734 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$95e40445] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:40:23,791 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 02:40:24,205 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 02:40:24,213 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:40:24,215 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 02:40:24,215 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 02:40:24,314 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 02:40:24,315 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3085 ms
2022-07-09 02:40:24,678 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 02:40:25,093 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 02:40:25,102 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 02:40:25,152 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 02:40:25,152 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 02:40:25,152 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 02:40:25,152 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 02:40:26,348 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 02:40:26,352 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 02:40:28,038 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,042 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,043 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,043 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,043 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,043 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,043 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,044 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,044 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,044 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,044 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,044 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,045 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,045 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,045 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,045 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,045 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,045 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,045 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,046 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 02:40:28,108 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 02:40:28,110 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 02:40:28,110 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 02:40:28,224 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 02:40:29,254 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 02:40:29,406 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 02:40:29,408 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 02:40:29,408 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 02:40:29,408 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 02:40:29,408 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 02:40:29,408 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 02:40:29,409 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 02:40:29,409 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 02:40:29,409 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 02:40:29,409 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 02:40:29,409 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 02:40:29,409 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 02:40:29,410 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 02:40:29,498 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@87fc0fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@75063bd0, org.springframework.security.web.header.HeaderWriterFilter@1b9c716f, org.springframework.security.web.authentication.logout.LogoutFilter@1344f7fe, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b916cc2, org.springframework.security.web.session.ConcurrentSessionFilter@7845ee8a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5c60f096, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6bd2f039, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@2cc97e47, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@671f545b, org.springframework.security.web.session.SessionManagementFilter@33f2cf82, org.springframework.security.web.access.ExceptionTranslationFilter@3601549f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c9e6d95]
2022-07-09 02:40:29,689 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 02:40:30,066 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 02:40:30,237 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 02:40:30,287 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 02:40:30,289 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 02:40:30,292 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 02:40:30,374 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 02:40:31,012 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 02:40:31,260 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 02:40:31,310 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#6afeaf2d:0/SimpleConnection@69c51fdb [delegate=amqp://guest@127.0.0.1:5672/, localPort= 59869]
2022-07-09 02:40:31,419 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.916 seconds (JVM running for 11.698)
2022-07-09 02:40:34,623 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 02:40:34,624 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 02:40:34,629 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 02:40:34,780 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:40:35,491 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:40:35,495 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:35.365)----
2022-07-09 02:40:35,556 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:35.365)----
2022-07-09 02:40:35,557 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:35.365)----
2022-07-09 02:40:35,557 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:35.365)----
2022-07-09 02:40:35,557 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:35.365)----
2022-07-09 02:40:35,574 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:40:35,668 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:40:35,670 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:40:35,718 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> anonymousUser----
2022-07-09 02:40:35,810 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:40:35,811 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:40:35,811 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 02:40:37,353 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 02:40:37,636 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 02:40:37,638 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:37.526)----
2022-07-09 02:40:37,643 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:37.526)----
2022-07-09 02:40:37,643 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:37.526)----
2022-07-09 02:40:37,643 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:37.526)----
2022-07-09 02:40:37,644 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T02:40:37.526)----
2022-07-09 02:40:37,648 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 02:40:37,715 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 02:40:37,717 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 02:40:37,721 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:22) -->> anonymousUser----
2022-07-09 02:40:37,722 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 02:40:37,723 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 02:40:37,723 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:00:52,049 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:00:52,321 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:00:52,325 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:00:52,342 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:00:52,389 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:00:52,391 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:00:52,391 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:00:52,392 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:00:52,567 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:00:52,574 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:00:52,602 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:00:52,603 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:00:52,617 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:00:52,618 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:00:59,559 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:00:59,659 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 79341 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:00:59,660 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:01:01,192 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:01:01,195 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:01:01,338 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 137 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:01:01,353 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:01:01,355 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:01:01,378 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:01:01,400 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:01:01,401 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:01:01,441 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:01:01,442 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2022-07-09 03:01:01,611 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:01:02,241 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:01:02,261 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3e43af1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:01:02,318 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:01:02,752 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:01:02,764 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:01:02,765 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:01:02,766 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:01:02,868 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:01:02,869 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3138 ms
2022-07-09 03:01:03,217 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:01:03,664 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:01:03,674 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:01:03,719 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:01:03,719 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:01:03,720 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:01:03,720 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:01:05,011 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:01:05,015 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:01:06,746 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,749 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,750 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,750 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,751 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,751 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,751 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,751 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,752 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,752 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,752 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,753 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,753 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,753 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,753 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,753 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,754 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,754 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,754 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,754 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:01:06,820 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:01:06,822 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:01:06,823 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:01:06,960 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:01:07,994 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:01:08,138 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:01:08,138 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:01:08,138 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:01:08,139 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:01:08,140 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:01:08,140 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:01:08,227 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dd07be8, org.springframework.security.web.context.SecurityContextPersistenceFilter@456b140f, org.springframework.security.web.header.HeaderWriterFilter@2d3d4a54, org.springframework.security.web.authentication.logout.LogoutFilter@16c8e9b8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@512dc0e0, org.springframework.security.web.session.ConcurrentSessionFilter@19ce19b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e6bd367, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22854f2b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5c9e6d95, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b8fcdf2, org.springframework.security.web.session.SessionManagementFilter@2b19b346, org.springframework.security.web.access.ExceptionTranslationFilter@7cbede2b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@72bce309]
2022-07-09 03:01:08,388 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:01:08,754 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:01:08,927 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:01:08,977 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:01:08,979 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:01:08,981 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:01:09,062 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:01:09,694 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:01:09,973 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:01:10,025 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#70d5d96b:0/SimpleConnection@1e2c0292 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 49402]
2022-07-09 03:01:10,132 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.182 seconds (JVM running for 12.048)
2022-07-09 03:01:34,278 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 03:01:34,281 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 03:01:34,291 INFO (FrameworkServlet.java:547)- Completed initialization in 9 ms
2022-07-09 03:01:34,448 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:01:35,233 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:01:35,237 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:27) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:01:35.108)----
2022-07-09 03:01:35,243 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception
java.lang.ClassCastException: org.springframework.security.authentication.UsernamePasswordAuthenticationToken cannot be cast to com.ve.blog.dto.UserDetailDTO
	at com.ve.blog.util.UserUtils.getLoginUser(UserUtils.java:28)
	at com.ve.blog.handler.AuthenticationSuccessHandlerImpl.onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:38)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.successfulAuthentication(AbstractAuthenticationProcessingFilter.java:321)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:232)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-07-09 03:01:35,255 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:01:35,256 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 03:01:39,300 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:01:39,664 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:01:39,667 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:27) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:01:39.560)----
2022-07-09 03:01:39,667 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception
java.lang.ClassCastException: org.springframework.security.authentication.UsernamePasswordAuthenticationToken cannot be cast to com.ve.blog.dto.UserDetailDTO
	at com.ve.blog.util.UserUtils.getLoginUser(UserUtils.java:28)
	at com.ve.blog.handler.AuthenticationSuccessHandlerImpl.onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:38)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.successfulAuthentication(AbstractAuthenticationProcessingFilter.java:321)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:232)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-07-09 03:01:39,670 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:01:39,671 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 03:01:45,420 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:01:45,705 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:01:45,706 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:27) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:01:45.585)----
2022-07-09 03:01:45,707 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception
java.lang.ClassCastException: org.springframework.security.authentication.UsernamePasswordAuthenticationToken cannot be cast to com.ve.blog.dto.UserDetailDTO
	at com.ve.blog.util.UserUtils.getLoginUser(UserUtils.java:28)
	at com.ve.blog.handler.AuthenticationSuccessHandlerImpl.onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:38)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.successfulAuthentication(AbstractAuthenticationProcessingFilter.java:321)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:232)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-07-09 03:01:45,709 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:01:45,710 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 03:04:47,836 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:04:47,990 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:04:47,993 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:04:48,988 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:04:49,044 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:04:49,046 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:04:49,047 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:04:49,047 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:04:49,230 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:04:49,235 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:04:49,258 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:04:49,260 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:04:49,275 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:04:49,277 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:04:55,416 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:04:55,502 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 80105 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:04:55,505 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:04:57,041 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:04:57,043 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:04:57,179 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 131 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:04:57,194 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:04:57,195 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:04:57,216 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:04:57,237 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:04:57,238 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:04:57,286 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:04:57,287 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2022-07-09 03:04:57,456 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:04:58,088 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:04:58,108 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3e43af1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:04:58,164 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:04:58,591 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:04:58,600 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:04:58,602 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:04:58,602 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:04:58,711 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:04:58,711 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3141 ms
2022-07-09 03:04:59,061 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:04:59,471 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:04:59,480 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:04:59,532 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:04:59,533 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:04:59,533 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:04:59,533 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:05:00,779 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:05:00,782 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:05:02,467 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,472 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,472 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,472 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,473 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,473 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,473 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,473 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,474 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,474 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,474 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,474 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,475 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,475 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,475 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,475 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,475 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,476 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,476 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,476 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:05:02,538 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:05:02,540 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:05:02,541 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:05:02,660 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:05:03,674 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:05:03,816 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:05:03,816 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:05:03,816 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:05:03,816 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:05:03,817 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:05:03,817 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:05:03,817 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:05:03,817 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:05:03,817 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:05:03,817 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:05:03,818 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:05:03,818 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:05:03,818 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:05:03,907 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b8fcdf2, org.springframework.security.web.context.SecurityContextPersistenceFilter@2459333a, org.springframework.security.web.header.HeaderWriterFilter@215c6ec0, org.springframework.security.web.authentication.logout.LogoutFilter@7030b74c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f96654, org.springframework.security.web.session.ConcurrentSessionFilter@13047d3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bd7f686, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ae0a26, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5d00b469, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54d2f5d3, org.springframework.security.web.session.SessionManagementFilter@37c5b8e8, org.springframework.security.web.access.ExceptionTranslationFilter@1ef04613, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f439e0f]
2022-07-09 03:05:04,088 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:05:04,478 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:05:04,657 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:05:04,710 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:05:04,712 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:05:04,716 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:05:04,801 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:05:05,373 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:05:05,662 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:05:05,732 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#23469199:0/SimpleConnection@69988d42 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 50635]
2022-07-09 03:05:05,828 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.023 seconds (JVM running for 11.85)
2022-07-09 03:05:08,471 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 03:05:08,473 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 03:05:08,482 INFO (FrameworkServlet.java:547)- Completed initialization in 8 ms
2022-07-09 03:05:08,648 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:05:09,417 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:05:09,422 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:25) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:05:09.291)----
2022-07-09 03:05:09,457 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:25) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:05:09.291)----
2022-07-09 03:05:09,475 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception
java.lang.NullPointerException: null
	at com.ve.blog.handler.AuthenticationSuccessHandlerImpl.updateUserInfo(AuthenticationSuccessHandlerImpl.java:51)
	at com.ve.blog.handler.AuthenticationSuccessHandlerImpl.onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:42)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.successfulAuthentication(AbstractAuthenticationProcessingFilter.java:321)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:232)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-07-09 03:05:09,486 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:05:09,487 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 03:08:51,339 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:08:51,626 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:08:51,629 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:08:52,630 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:08:52,686 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:08:52,689 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:08:52,689 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:08:52,689 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:08:52,872 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:08:52,876 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:08:52,899 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:08:52,900 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:08:52,916 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:08:52,919 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:08:58,999 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:08:59,098 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 80897 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:08:59,101 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:09:00,705 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:09:00,709 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:09:00,868 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 154 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:09:00,884 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:09:00,885 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:09:00,905 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 19 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:09:00,927 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:09:00,928 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:09:00,962 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:09:00,963 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2022-07-09 03:09:01,125 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:09:01,710 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:09:01,752 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$8dc39ca4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:09:01,808 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:09:02,238 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:09:02,248 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:09:02,249 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:09:02,249 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:09:02,352 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:09:02,353 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3186 ms
2022-07-09 03:09:02,708 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:09:03,120 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:09:03,130 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:09:03,178 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:09:03,178 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:09:03,179 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:09:03,179 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:09:04,406 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:09:04,414 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:09:06,061 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,064 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,065 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,065 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,065 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,066 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,066 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,066 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,066 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,066 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,067 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,067 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,067 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,067 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,067 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,067 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,068 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,068 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,068 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:06,136 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:09:06,138 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:09:06,139 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:09:06,276 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:09:07,207 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:09:07,343 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:09:07,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:09:07,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:09:07,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:09:07,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:09:07,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:09:07,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:09:07,345 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:09:07,345 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:09:07,345 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:09:07,345 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:09:07,345 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:09:07,345 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:09:07,438 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c29b0dc, org.springframework.security.web.context.SecurityContextPersistenceFilter@2bd7f686, org.springframework.security.web.header.HeaderWriterFilter@37c5b8e8, org.springframework.security.web.authentication.logout.LogoutFilter@512dc0e0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@637506d8, org.springframework.security.web.session.ConcurrentSessionFilter@2a5efbb9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b2c7186, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b9d1a4, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7b8fcdf2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@228958a, org.springframework.security.web.session.SessionManagementFilter@3205610d, org.springframework.security.web.access.ExceptionTranslationFilter@215c6ec0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5296f00c]
2022-07-09 03:09:07,601 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:09:07,962 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:09:08,129 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:09:08,175 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:09:08,177 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:09:08,180 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:09:08,263 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:09:08,879 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:09:09,131 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:09:09,183 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#5611bba:0/SimpleConnection@2809e38a [delegate=amqp://guest@127.0.0.1:5672/, localPort= 51840]
2022-07-09 03:09:09,294 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 10.877 seconds (JVM running for 11.605)
2022-07-09 03:09:13,950 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 03:09:13,953 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 03:09:13,969 INFO (FrameworkServlet.java:547)- Completed initialization in 16 ms
2022-07-09 03:09:14,150 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:09:15,105 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:09:15,109 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:26) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:09:14.979)----
2022-07-09 03:09:15,110 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:31) -->> UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:09:14.979)----
2022-07-09 03:09:15,162 ERROR (DirectJDKLog.java:175)- Servlet.service() for servlet [dispatcherServlet] in context with path [/blog/api] threw exception
com.alibaba.fastjson.JSONException: default constructor not found. class com.ve.blog.dto.UserDetailDTO
	at com.alibaba.fastjson.util.JavaBeanInfo.build(JavaBeanInfo.java:574)
	at com.alibaba.fastjson.parser.ParserConfig.createJavaBeanDeserializer(ParserConfig.java:1002)
	at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:888)
	at com.alibaba.fastjson.parser.ParserConfig.getDeserializer(ParserConfig.java:593)
	at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:699)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:394)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:298)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:588)
	at com.ve.blog.util.UserUtils.getLoginUser(UserUtils.java:32)
	at com.ve.blog.handler.AuthenticationSuccessHandlerImpl.onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:38)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.successfulAuthentication(AbstractAuthenticationProcessingFilter.java:321)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:232)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-07-09 03:09:15,168 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:09:15,168 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/error ，设置默认角色：游客
2022-07-09 03:09:43,178 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:09:43,388 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:09:43,391 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:09:44,393 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:09:44,463 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:09:44,528 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:09:44,529 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:09:44,529 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:09:44,693 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:09:44,698 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:09:44,793 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:09:44,795 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:09:44,809 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:09:44,810 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:09:50,975 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:09:51,089 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 81071 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:09:51,091 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:09:52,636 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:09:52,638 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:09:52,779 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 135 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:09:52,794 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:09:52,795 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:09:52,818 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:09:52,840 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:09:52,841 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:09:52,877 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:09:52,877 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2022-07-09 03:09:53,041 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:09:53,666 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:09:53,687 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ce189ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:09:53,741 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:09:54,166 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:09:54,175 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:09:54,176 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:09:54,177 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:09:54,286 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:09:54,287 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3130 ms
2022-07-09 03:09:54,607 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:09:55,007 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:09:55,017 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:09:55,065 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:09:55,066 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:09:55,066 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:09:55,066 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:09:56,270 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:09:56,274 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:09:57,935 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,940 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,940 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,940 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,941 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,941 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,941 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,941 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,941 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,942 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,942 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,942 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,942 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,942 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,942 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,942 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,943 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,943 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,943 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:57,943 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:09:58,006 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:09:58,007 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:09:58,008 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:09:58,129 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:09:59,207 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:09:59,356 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:09:59,357 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:09:59,357 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:09:59,357 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:09:59,357 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:09:59,357 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:09:59,357 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:09:59,358 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:09:59,358 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:09:59,358 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:09:59,358 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:09:59,358 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:09:59,358 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:09:59,455 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54d2f5d3, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e6bd367, org.springframework.security.web.header.HeaderWriterFilter@2b19b346, org.springframework.security.web.authentication.logout.LogoutFilter@27d6267e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@75063bd0, org.springframework.security.web.session.ConcurrentSessionFilter@4b240276, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3601549f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ddf5118, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@dd07be8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c29b0dc, org.springframework.security.web.session.SessionManagementFilter@706d2bae, org.springframework.security.web.access.ExceptionTranslationFilter@2d3d4a54, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62410e1f]
2022-07-09 03:09:59,636 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:10:00,011 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:10:00,195 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:10:00,243 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:10:00,245 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:10:00,249 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:10:00,341 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:10:00,997 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:10:01,266 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:10:01,327 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#75dc1c1c:0/SimpleConnection@1a56f608 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 52159]
2022-07-09 03:10:01,432 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.03 seconds (JVM running for 11.693)
2022-07-09 03:10:47,367 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:10:47,604 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:10:47,606 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:10:48,602 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:10:48,656 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:10:48,660 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:10:48,660 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:10:48,660 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:10:48,716 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:10:48,719 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:10:48,740 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:10:48,741 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:10:48,756 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:10:48,757 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:10:54,799 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:10:54,901 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 81282 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:10:54,902 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:10:56,444 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:10:56,446 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:10:56,586 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 135 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:10:56,601 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:10:56,602 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:10:56,624 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:10:56,647 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:10:56,648 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:10:56,694 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:10:56,695 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 32 ms. Found 0 Redis repository interfaces.
2022-07-09 03:10:56,859 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:10:57,468 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:10:57,483 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ce189ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:10:57,541 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:10:57,978 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:10:57,988 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:10:57,991 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:10:57,991 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:10:58,094 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:10:58,095 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3114 ms
2022-07-09 03:10:58,442 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:10:58,905 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:10:58,918 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:10:58,967 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:10:58,967 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:10:58,968 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:10:58,968 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:11:00,159 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:11:00,162 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:11:01,838 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,841 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,842 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,842 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,842 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,843 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,843 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,843 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,843 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,844 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,844 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,844 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,844 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,844 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,844 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,845 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,845 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,845 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,845 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,845 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:11:01,911 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:11:01,913 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:11:01,913 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:11:02,039 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:11:03,170 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:11:03,342 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:11:03,343 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:11:03,343 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:11:03,343 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:11:03,343 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:11:03,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:11:03,344 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:11:03,348 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:11:03,348 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:11:03,348 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:11:03,348 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:11:03,348 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:11:03,349 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:11:03,448 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54d2f5d3, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e6bd367, org.springframework.security.web.header.HeaderWriterFilter@2b19b346, org.springframework.security.web.authentication.logout.LogoutFilter@27d6267e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@75063bd0, org.springframework.security.web.session.ConcurrentSessionFilter@4b240276, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3601549f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ddf5118, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@dd07be8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c29b0dc, org.springframework.security.web.session.SessionManagementFilter@706d2bae, org.springframework.security.web.access.ExceptionTranslationFilter@2d3d4a54, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62410e1f]
2022-07-09 03:11:03,625 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:11:04,009 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:11:04,189 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:11:04,235 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:11:04,237 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:11:04,240 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:11:04,330 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:11:04,977 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:11:05,213 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:11:05,267 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#75dc1c1c:0/SimpleConnection@69ae7632 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 52537]
2022-07-09 03:11:05,372 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.136 seconds (JVM running for 11.789)
2022-07-09 03:11:07,822 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 03:11:07,824 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 03:11:07,838 INFO (FrameworkServlet.java:547)- Completed initialization in 14 ms
2022-07-09 03:11:08,011 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:11:08,662 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:11:08,751 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:11:08,950 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:11:08,952 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:11:09,005 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:11:09,005 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:11:09,005 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:11:26,657 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:11:27,015 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:11:27,021 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:11:27,092 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:11:27,095 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:11:27,102 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:11:27,103 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:11:27,103 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:13:13,564 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:13:13,570 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:13:30,682 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:13:31,033 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:36) -->> 认证成功！
2022-07-09 03:13:31,037 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:13:31,111 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:13:31,113 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:13:31,121 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:13:31,122 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:13:31,122 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:18:42,977 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:18:42,983 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:19:05,090 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:19:05,092 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/user/login ，设置默认角色：游客
2022-07-09 03:19:11,860 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:19:11,860 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:19:11,864 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/report ，设置默认角色：游客
2022-07-09 03:19:11,864 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:19:11,875 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:19:11,876 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:19:11,876 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:19:12,961 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:19:12,963 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/user/login ，设置默认角色：游客
2022-07-09 03:19:45,748 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:19:45,751 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 03:19:45,951 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:199) -->> 用户名：admin@qq.com
2022-07-09 03:19:45,954 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:200) -->> 密码：1234567
2022-07-09 03:19:45,955 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:19:46,597 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:19:46,598 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:19:46,603 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:19:46,604 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:19:46,604 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:20:07,805 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:20:07,810 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/blog/api/users/login ，设置默认角色：游客
2022-07-09 03:20:07,822 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:199) -->> 用户名：admin@qq.com
2022-07-09 03:20:07,822 INFO (LogUtil.java:32)- login(UserAuthServiceImpl.java:200) -->> 密码：1234567
2022-07-09 03:20:07,822 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:20:08,252 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:20:08,253 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:20:08,255 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:20:08,255 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:20:08,256 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:21:09,319 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:21:09,865 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:21:09,872 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:21:10,839 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:21:10,902 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:21:10,904 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:21:10,904 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:21:10,905 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:21:11,075 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:21:11,079 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:21:11,103 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:21:11,105 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:21:11,120 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:21:11,121 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:21:17,321 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:21:17,426 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 83302 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:21:17,429 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:21:19,016 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:21:19,019 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:21:19,154 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 130 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:21:19,170 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:21:19,171 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:21:19,193 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:21:19,215 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:21:19,216 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:21:19,253 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:21:19,254 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 03:21:19,423 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:21:20,049 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:21:20,069 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ce189ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:21:20,121 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:21:20,544 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:21:20,552 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:21:20,554 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:21:20,555 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:21:20,666 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:21:20,667 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3173 ms
2022-07-09 03:21:21,019 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:21:21,445 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:21:21,454 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:21:21,506 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:21:21,507 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:21:21,507 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:21:21,507 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:21:22,735 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:21:22,738 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:21:24,381 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,385 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,385 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,385 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,386 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,386 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,386 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,386 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,386 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,387 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,387 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,387 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,387 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,387 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,387 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,388 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,388 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,388 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,388 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,388 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:21:24,450 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:21:24,452 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:21:24,452 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:21:24,571 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:21:25,624 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:21:25,764 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:21:25,764 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:21:25,764 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:21:25,765 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:21:25,765 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:21:25,765 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:21:25,765 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:21:25,765 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:21:25,765 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:21:25,766 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:21:25,766 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:21:25,767 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:21:25,767 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:21:25,852 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54d2f5d3, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e6bd367, org.springframework.security.web.header.HeaderWriterFilter@2b19b346, org.springframework.security.web.authentication.logout.LogoutFilter@27d6267e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@75063bd0, org.springframework.security.web.session.ConcurrentSessionFilter@4b240276, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3601549f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ddf5118, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@dd07be8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c29b0dc, org.springframework.security.web.session.SessionManagementFilter@706d2bae, org.springframework.security.web.access.ExceptionTranslationFilter@2d3d4a54, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62410e1f]
2022-07-09 03:21:26,038 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:21:26,390 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:21:26,565 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:21:26,611 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:21:26,613 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:21:26,616 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:21:26,700 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:21:27,352 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:21:27,607 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:21:27,657 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#75dc1c1c:0/SimpleConnection@2b9370cc [delegate=amqp://guest@127.0.0.1:5672/, localPort= 55666]
2022-07-09 03:21:27,760 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.035 seconds (JVM running for 11.732)
2022-07-09 03:21:32,474 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 03:21:32,476 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 03:21:32,493 INFO (FrameworkServlet.java:547)- Completed initialization in 16 ms
2022-07-09 03:21:32,666 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:21:33,470 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 03:21:33,475 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:21:33.344)
2022-07-09 03:21:33,545 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:21:33.344)
2022-07-09 03:21:33,546 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:21:33.344)
2022-07-09 03:21:33,546 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:21:33.344)
2022-07-09 03:21:33,546 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:21:33.344)
2022-07-09 03:21:33,560 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:21:33,672 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:21:33,674 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:21:33,717 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:21:33,724 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:21:33,724 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:21:33,725 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:24:47,141 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:24:47,564 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:24:47,568 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:24:48,567 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:24:48,657 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:24:48,667 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:24:48,667 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:24:48,667 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:24:48,840 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:24:48,845 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:24:48,871 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:24:48,873 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:24:48,887 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:24:48,889 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:24:56,869 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:24:56,951 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 84029 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:24:56,953 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:24:58,533 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:24:58,535 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:24:58,672 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 132 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:24:58,686 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:24:58,687 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:24:58,709 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 21 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:24:58,732 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:24:58,733 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:24:58,781 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:24:58,782 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 36 ms. Found 0 Redis repository interfaces.
2022-07-09 03:24:58,961 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:24:59,654 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:24:59,670 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3e43af1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:24:59,725 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:25:00,164 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:25:00,173 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:25:00,175 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:25:00,175 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:25:00,282 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:25:00,283 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3265 ms
2022-07-09 03:25:00,617 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:25:01,110 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:25:01,124 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:25:01,180 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:25:01,181 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:25:01,183 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:25:01,183 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:25:02,431 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:25:02,435 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:25:04,205 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,209 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,210 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,210 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,211 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,211 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,211 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,211 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,211 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,212 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,212 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,212 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,212 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,213 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,213 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,213 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,213 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,214 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,214 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,214 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:25:04,285 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:25:04,287 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:25:04,287 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:25:04,406 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:25:05,533 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:25:05,703 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:25:05,704 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:25:05,704 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:25:05,704 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:25:05,705 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:25:05,706 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:25:05,801 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d00b469, org.springframework.security.web.context.SecurityContextPersistenceFilter@1835b783, org.springframework.security.web.header.HeaderWriterFilter@1ef04613, org.springframework.security.web.authentication.logout.LogoutFilter@5f35370b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@27d6267e, org.springframework.security.web.session.ConcurrentSessionFilter@4e45fbd0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2459333a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73852720, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@155c7eae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@dd07be8, org.springframework.security.web.session.SessionManagementFilter@215c6ec0, org.springframework.security.web.access.ExceptionTranslationFilter@5d4a34ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f4df55e]
2022-07-09 03:25:05,976 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:25:06,362 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:25:06,545 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:25:06,595 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:25:06,598 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:25:06,600 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:25:06,689 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:25:07,358 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:25:07,592 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:25:07,645 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#23469199:0/SimpleConnection@1a56f608 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56819]
2022-07-09 03:25:07,763 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.512 seconds (JVM running for 12.341)
2022-07-09 03:25:11,148 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 03:25:11,151 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 03:25:11,163 INFO (FrameworkServlet.java:547)- Completed initialization in 11 ms
2022-07-09 03:25:11,201 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:11,202 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:11,354 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:11,362 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:11,375 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:11,376 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:14,145 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:14,146 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:14,149 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:14,150 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:14,151 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:14,151 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:15,934 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:15,937 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:15,944 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:15,947 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:15,948 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:15,948 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:16,830 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:16,836 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:16,842 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:16,843 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:16,844 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:16,844 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:17,940 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:17,942 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:17,947 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:17,949 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:17,950 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:17,950 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:23,838 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:23,845 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:23,846 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:23,847 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:23,847 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:23,848 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:28,742 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:28,743 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:28,747 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:28,748 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:28,749 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:28,751 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:30,870 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:25:31,570 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 03:25:31,574 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.428)
2022-07-09 03:25:31,595 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:25:31,668 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.428)
2022-07-09 03:25:31,669 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.428)
2022-07-09 03:25:31,669 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.428)
2022-07-09 03:25:31,669 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.428)
2022-07-09 03:25:31,682 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:25:31,771 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:31,772 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:31,777 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:31,778 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:31,778 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:31,779 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:32,014 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 03:25:32,014 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:32,017 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:32,018 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:32,018 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:32,018 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:32,020 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:25:32,079 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:32,080 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:32,085 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:32,087 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:32,088 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:32,088 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:42,696 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:42,701 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:42,713 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:44,450 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:44,452 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:44,455 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:49,808 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:49,810 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:49,812 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:49,995 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:49,998 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:50,002 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:50,171 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:50,176 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:50,179 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:50,348 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:50,349 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:50,356 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:50,488 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:50,489 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:50,494 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:31.909)
2022-07-09 03:25:52,243 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:25:52,528 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 03:25:52,529 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:52.415)
2022-07-09 03:25:52,531 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:52.415)
2022-07-09 03:25:52,531 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:52.415)
2022-07-09 03:25:52,531 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:52.415)
2022-07-09 03:25:52,531 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:52.415)
2022-07-09 03:25:52,533 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:25:52,611 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:52,613 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:52,618 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:52,620 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:52,620 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:52,620 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:53,503 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:25:53,697 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 03:25:53,699 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:53,704 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:53,705 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:53,705 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:53,705 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:53,708 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:25:53,777 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:53,781 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:53,787 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:25:53,789 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:25:53,790 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:25:53,790 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:25:55,109 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:55,111 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:55,127 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:55,672 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:55,674 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:55,678 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:55,884 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:55,887 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:55,897 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:56,074 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:56,075 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:56,078 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:25:56,266 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:25:56,272 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:25:56,274 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:25:53.592)
2022-07-09 03:26:04,168 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:26:04,543 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 03:26:04,544 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:26:04.431)
2022-07-09 03:26:04,547 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:26:04.431)
2022-07-09 03:26:04,547 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:26:04.431)
2022-07-09 03:26:04,547 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:26:04.431)
2022-07-09 03:26:04,547 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:26:04.431)
2022-07-09 03:26:04,551 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:26:04,634 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:26:04,636 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:26:04,640 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:26:04,642 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:26:04,642 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:26:04,642 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:28:27,903 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:28:27,912 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/role/resources ，设置默认角色：游客
2022-07-09 03:28:49,991 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:28:49,992 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:28:49,994 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:28:49,997 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:28:49,999 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:28:50,001 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:28:54,594 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:28:54,597 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:28:54,609 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:28:54,612 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:28:54,612 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:28:54,613 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:29:01,952 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:29:01,956 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:29:01,966 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:29:01,969 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:29:01,969 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:29:01,970 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:29:10,701 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:29:10,704 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:29:10,711 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:29:10,721 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:29:10,722 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:29:10,722 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:33:06,359 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:33:06,666 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:33:06,668 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:33:07,649 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:33:07,720 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:33:07,722 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:33:07,722 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:33:07,722 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:33:07,897 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:33:07,900 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:33:07,921 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:33:07,922 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:33:07,937 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:33:07,937 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 03:33:12,159 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 03:33:12,251 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 85650 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 03:33:12,253 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 03:33:13,815 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:33:13,817 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:33:13,961 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 138 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 03:33:13,979 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:33:13,980 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 03:33:14,011 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 29 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 03:33:14,036 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 03:33:14,038 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 03:33:14,078 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 03:33:14,078 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 03:33:14,284 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 03:33:14,961 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:33:14,978 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3e43af1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:33:15,040 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 03:33:15,506 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 03:33:15,516 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:33:15,517 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 03:33:15,517 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 03:33:15,655 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 03:33:15,656 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3340 ms
2022-07-09 03:33:16,030 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 03:33:16,482 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 03:33:16,489 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 03:33:16,541 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 03:33:16,542 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 03:33:16,543 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 03:33:16,543 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 03:33:17,935 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 03:33:17,938 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 03:33:19,774 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,778 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,779 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,779 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,779 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,780 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,780 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,780 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,780 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,781 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,781 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,781 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,781 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,781 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,782 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,782 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,782 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,782 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,782 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,782 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 03:33:19,842 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 03:33:19,843 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 03:33:19,844 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 03:33:19,973 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 03:33:21,099 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 03:33:21,285 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 03:33:21,286 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 03:33:21,286 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 03:33:21,286 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 03:33:21,286 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 03:33:21,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 03:33:21,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 03:33:21,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 03:33:21,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 03:33:21,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 03:33:21,288 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 03:33:21,288 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 03:33:21,288 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 03:33:21,388 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d00b469, org.springframework.security.web.context.SecurityContextPersistenceFilter@1835b783, org.springframework.security.web.header.HeaderWriterFilter@1ef04613, org.springframework.security.web.authentication.logout.LogoutFilter@5f35370b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@27d6267e, org.springframework.security.web.session.ConcurrentSessionFilter@4e45fbd0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2459333a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73852720, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@155c7eae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@dd07be8, org.springframework.security.web.session.SessionManagementFilter@215c6ec0, org.springframework.security.web.access.ExceptionTranslationFilter@5d4a34ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5f4df55e]
2022-07-09 03:33:21,570 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 03:33:21,947 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 03:33:22,113 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 03:33:22,160 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 03:33:22,163 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 03:33:22,165 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 03:33:22,276 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 03:33:22,938 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 03:33:23,206 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 03:33:23,270 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#23469199:0/SimpleConnection@71806c64 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 59366]
2022-07-09 03:33:23,400 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.879 seconds (JVM running for 12.797)
2022-07-09 03:33:26,624 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 03:33:26,625 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 03:33:26,637 INFO (FrameworkServlet.java:547)- Completed initialization in 11 ms
2022-07-09 03:33:26,833 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 03:33:27,605 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 03:33:27,609 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:33:27.480)
2022-07-09 03:33:27,671 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:33:27.480)
2022-07-09 03:33:27,672 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:33:27.480)
2022-07-09 03:33:27,672 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:33:27.480)
2022-07-09 03:33:27,673 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T03:33:27.480)
2022-07-09 03:33:27,685 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 03:33:27,796 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 03:33:27,798 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 03:33:27,847 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:30) -->> auth :anonymousUser
2022-07-09 03:33:27,863 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 03:33:27,864 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 03:33:27,864 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 03:33:55,614 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:33:56,496 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:33:56,499 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 03:33:56,506 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 03:33:56,566 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 03:33:56,572 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:33:56,572 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 03:33:56,573 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 03:33:56,749 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 03:33:56,753 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 03:33:56,778 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 03:33:56,780 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 03:33:56,794 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 03:33:56,795 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 14:59:02,143 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 14:59:02,224 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 93641 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 14:59:02,225 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 14:59:03,987 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 14:59:03,990 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 14:59:04,134 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 139 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 14:59:04,149 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 14:59:04,150 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 14:59:04,175 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 14:59:04,198 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 14:59:04,200 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 14:59:04,239 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 14:59:04,240 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 14:59:04,414 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 14:59:05,066 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 14:59:05,084 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ce189ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 14:59:05,141 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 14:59:05,539 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 14:59:05,548 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 14:59:05,550 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 14:59:05,550 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 14:59:05,658 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 14:59:05,659 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3366 ms
2022-07-09 14:59:06,023 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 14:59:06,536 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 14:59:06,550 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 14:59:06,599 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 14:59:06,600 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 14:59:06,601 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 14:59:06,601 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 14:59:08,053 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 14:59:08,057 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 14:59:10,022 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,025 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,025 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,026 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,026 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,026 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,026 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,026 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,027 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,027 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,027 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,027 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,028 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,028 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,028 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,028 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,028 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,028 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,029 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,029 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 14:59:10,097 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 14:59:10,099 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 14:59:10,100 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 14:59:10,221 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 14:59:11,311 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 14:59:11,476 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 14:59:11,476 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 14:59:11,477 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 14:59:11,477 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 14:59:11,477 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 14:59:11,477 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 14:59:11,478 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 14:59:11,478 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 14:59:11,478 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 14:59:11,478 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 14:59:11,478 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 14:59:11,478 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 14:59:11,478 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 14:59:11,574 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dd07be8, org.springframework.security.web.context.SecurityContextPersistenceFilter@456b140f, org.springframework.security.web.header.HeaderWriterFilter@2d3d4a54, org.springframework.security.web.authentication.logout.LogoutFilter@16c8e9b8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@512dc0e0, org.springframework.security.web.session.ConcurrentSessionFilter@19ce19b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e6bd367, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22854f2b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5c9e6d95, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b8fcdf2, org.springframework.security.web.session.SessionManagementFilter@2b19b346, org.springframework.security.web.access.ExceptionTranslationFilter@7cbede2b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@72bce309]
2022-07-09 14:59:11,746 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 14:59:12,128 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 14:59:12,299 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 14:59:12,346 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/blog/api'
2022-07-09 14:59:12,348 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 14:59:12,351 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 14:59:12,440 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 14:59:13,084 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 14:59:13,301 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 14:59:13,356 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#75dc1c1c:0/SimpleConnection@78ab63b5 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 54955]
2022-07-09 14:59:13,447 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.881 seconds (JVM running for 12.641)
2022-07-09 15:00:15,296 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 15:00:15,298 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 15:00:15,307 INFO (FrameworkServlet.java:547)- Completed initialization in 8 ms
2022-07-09 15:00:15,461 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 15:00:15,895 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 15:00:15,897 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:00:15.772)
2022-07-09 15:00:15,953 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:00:15.772)
2022-07-09 15:00:15,954 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:00:15.772)
2022-07-09 15:00:15,955 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:00:15.772)
2022-07-09 15:00:15,955 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:00:15.772)
2022-07-09 15:00:15,971 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 15:00:16,074 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:00:16,075 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/blog/api/admin/user/menus ，设置默认角色：游客
2022-07-09 15:00:16,128 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :anonymousUser
2022-07-09 15:00:16,145 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 15:00:16,146 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /blog/api
2022-07-09 15:00:16,146 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 15:10:53,794 WARN (HikariPool.java:787)- master - Thread starvation or clock leap detected (housekeeper delta=8m17s115ms).
2022-07-09 15:10:53,853 WARN (HikariPool.java:787)- auth - Thread starvation or clock leap detected (housekeeper delta=8m17s113ms).
2022-07-09 15:14:49,582 WARN (HikariPool.java:787)- master - Thread starvation or clock leap detected (housekeeper delta=3m55s793ms).
2022-07-09 15:14:49,640 WARN (HikariPool.java:787)- auth - Thread starvation or clock leap detected (housekeeper delta=3m55s788ms).
2022-07-09 15:15:27,207 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 15:15:27,662 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 15:15:27,667 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 15:15:28,660 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 15:15:28,737 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 15:15:28,739 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 15:15:28,739 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 15:15:28,740 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 15:15:28,914 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 15:15:28,918 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 15:15:28,945 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 15:15:28,946 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 15:15:28,964 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 15:15:28,966 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 15:15:33,053 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 15:15:33,186 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 94735 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 15:15:33,189 INFO (SpringApplication.java:664)- The following profiles are active: dev,auth,msg,upload
2022-07-09 15:15:34,876 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 15:15:34,879 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 15:15:35,120 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 236 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 15:15:35,136 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 15:15:35,136 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 15:15:35,161 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 23 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 15:15:35,182 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 15:15:35,185 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 15:15:35,224 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 15:15:35,225 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2022-07-09 15:15:35,392 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 15:15:36,012 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 15:15:36,030 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ce189ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 15:15:36,084 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 15:15:36,504 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 15:15:36,517 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 15:15:36,517 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 15:15:36,517 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 15:15:36,622 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 15:15:36,624 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3361 ms
2022-07-09 15:15:36,971 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 15:15:37,417 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 15:15:37,427 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 15:15:37,481 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 15:15:37,482 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 15:15:37,482 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 15:15:37,483 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 15:15:38,675 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 15:15:38,678 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 15:15:40,505 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,509 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,509 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,509 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,510 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,510 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,511 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,511 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,511 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,511 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,511 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,512 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,512 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,512 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,512 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,512 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,512 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,513 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,513 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,513 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 15:15:40,584 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 15:15:40,586 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 15:15:40,587 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 15:15:40,730 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Connection refused; nested exception is java.lang.RuntimeException: Connection refused
2022-07-09 15:15:41,636 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 15:15:41,781 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 15:15:41,782 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 15:15:41,782 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 15:15:41,782 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 15:15:41,782 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 15:15:41,782 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 15:15:41,783 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 15:15:41,783 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 15:15:41,783 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 15:15:41,783 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 15:15:41,783 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 15:15:41,783 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 15:15:41,783 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 15:15:41,874 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@dd07be8, org.springframework.security.web.context.SecurityContextPersistenceFilter@456b140f, org.springframework.security.web.header.HeaderWriterFilter@2d3d4a54, org.springframework.security.web.authentication.logout.LogoutFilter@16c8e9b8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@512dc0e0, org.springframework.security.web.session.ConcurrentSessionFilter@19ce19b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e6bd367, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22854f2b, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5c9e6d95, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b8fcdf2, org.springframework.security.web.session.SessionManagementFilter@2b19b346, org.springframework.security.web.access.ExceptionTranslationFilter@7cbede2b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@72bce309]
2022-07-09 15:15:42,049 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 15:15:42,415 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 15:15:42,590 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 15:15:42,639 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/api'
2022-07-09 15:15:42,641 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 15:15:42,644 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 15:15:42,780 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 15:15:43,358 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 15:15:43,589 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 15:15:43,640 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#75dc1c1c:0/SimpleConnection@69988d42 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 56409]
2022-07-09 15:15:43,761 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 11.352 seconds (JVM running for 12.079)
2022-07-09 15:16:13,250 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 15:16:13,252 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 15:16:13,266 INFO (FrameworkServlet.java:547)- Completed initialization in 14 ms
2022-07-09 15:16:13,312 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:13,314 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:16:14,642 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 15:16:15,160 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 15:16:15,166 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:16:15.029)
2022-07-09 15:16:15,250 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:16:15.029)
2022-07-09 15:16:15,251 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:16:15.029)
2022-07-09 15:16:15,251 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:16:15.029)
2022-07-09 15:16:15,251 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:16:15.029)
2022-07-09 15:16:15,267 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 15:16:15,364 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:15,365 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/user/menus ，设置默认角色：游客
2022-07-09 15:16:15,391 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=管理员, avatar=https://static.talkxj.com/avatar/user.png, intro=admin@qq.com, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:16:15.029)
2022-07-09 15:16:15,770 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:15,770 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:15,774 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/area ，设置默认角色：游客
2022-07-09 15:16:15,774 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin ，设置默认角色：游客
2022-07-09 15:16:21,804 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:21,804 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:21,804 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:21,808 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/role/menus ，设置默认角色：游客
2022-07-09 15:16:21,808 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/role/resources ，设置默认角色：游客
2022-07-09 15:16:21,808 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/roles ，设置默认角色：游客
2022-07-09 15:16:23,948 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:23,950 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/resources ，设置默认角色：游客
2022-07-09 15:16:29,082 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:29,084 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/menus ，设置默认角色：游客
2022-07-09 15:16:35,781 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:35,783 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/online ，设置默认角色：游客
2022-07-09 15:16:36,596 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:36,596 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:36,598 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/role ，设置默认角色：游客
2022-07-09 15:16:36,598 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users ，设置默认角色：游客
2022-07-09 15:16:48,157 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:48,160 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/online ，设置默认角色：游客
2022-07-09 15:16:50,709 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:50,709 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:50,712 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users ，设置默认角色：游客
2022-07-09 15:16:50,712 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/role ，设置默认角色：游客
2022-07-09 15:16:51,750 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:51,752 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/online ，设置默认角色：游客
2022-07-09 15:16:57,177 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:57,177 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:16:57,180 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users ，设置默认角色：游客
2022-07-09 15:16:57,180 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/role ，设置默认角色：游客
2022-07-09 15:17:02,517 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:02,518 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/comments ，设置默认角色：游客
2022-07-09 15:17:02,671 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 15:17:02,671 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /api
2022-07-09 15:17:02,672 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 15:17:04,544 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:04,547 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/messages ，设置默认角色：游客
2022-07-09 15:17:10,645 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:10,645 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:10,645 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:10,647 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/categories/search ，设置默认角色：游客
2022-07-09 15:17:10,647 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/tags/search ，设置默认角色：游客
2022-07-09 15:17:10,647 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/articles ，设置默认角色：游客
2022-07-09 15:17:12,999 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:12,999 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:13,002 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:12,999 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:13,004 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/categories/search ，设置默认角色：游客
2022-07-09 15:17:13,004 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/tags/search ，设置默认角色：游客
2022-07-09 15:17:13,004 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/categories ，设置默认角色：游客
2022-07-09 15:17:13,004 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/articles ，设置默认角色：游客
2022-07-09 15:17:14,336 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:14,338 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/tags ，设置默认角色：游客
2022-07-09 15:17:17,676 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:17,678 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/categories ，设置默认角色：游客
2022-07-09 15:17:23,924 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:23,924 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:23,924 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:23,928 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/role/resources ，设置默认角色：游客
2022-07-09 15:17:23,928 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/roles ，设置默认角色：游客
2022-07-09 15:17:23,928 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/role/menus ，设置默认角色：游客
2022-07-09 15:17:25,795 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:25,796 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/resources ，设置默认角色：游客
2022-07-09 15:17:52,236 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:52,237 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/photos/albums ，设置默认角色：游客
2022-07-09 15:17:57,227 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:17:57,229 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/talks ，设置默认角色：游客
2022-07-09 15:18:01,026 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:18:01,026 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/operation/logs ，设置默认角色：游客
2022-07-09 15:33:21,131 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:21,131 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:21,137 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:33:21,137 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 15:33:21,482 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:21,484 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 15:33:21,565 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:21,566 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 15:33:40,423 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:40,423 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:40,433 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 15:33:40,434 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:33:40,519 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:40,519 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:40,521 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 15:33:40,521 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 15:33:55,649 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:33:55,652 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 15:34:13,920 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:34:13,920 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:34:13,923 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 15:34:13,924 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:34:14,035 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:34:14,035 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:34:14,037 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 15:34:14,037 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 15:34:51,245 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:34:51,245 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:34:51,248 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/links ，设置默认角色：游客
2022-07-09 15:34:51,248 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 15:35:17,098 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:35:17,098 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:35:17,102 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 15:35:17,102 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 15:35:29,686 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:35:29,686 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:35:29,688 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:35:29,690 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:35:29,690 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 15:35:29,690 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 15:35:29,741 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:35:29,743 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 15:36:37,856 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:36:37,866 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:36:38,835 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：admin@qq.com
2022-07-09 15:36:39,124 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 15:36:39,126 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:36:39,130 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:36:39,131 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:36:39,131 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:36:39,131 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:36:39,134 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 15:36:39,233 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:36:39,235 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/user/menus ，设置默认角色：游客
2022-07-09 15:36:39,239 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:36:39,711 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:36:39,711 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:36:39,713 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/area ，设置默认角色：游客
2022-07-09 15:36:39,713 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin ，设置默认角色：游客
2022-07-09 15:36:49,098 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:36:49,101 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/website/config ，设置默认角色：游客
2022-07-09 15:37:11,268 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:37:11,268 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:37:11,271 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:37:11,271 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/user/menus ，设置默认角色：游客
2022-07-09 15:37:11,279 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:37:11,581 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:37:11,583 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/website/config ，设置默认角色：游客
2022-07-09 15:37:45,316 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:37:45,326 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/error ，设置默认角色：游客
2022-07-09 15:38:06,267 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:38:06,269 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/website/config ，设置默认角色：游客
2022-07-09 15:39:44,363 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:44,367 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/website/config ，设置默认角色：游客
2022-07-09 15:39:48,645 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:48,645 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:48,648 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/user/menus ，设置默认角色：游客
2022-07-09 15:39:48,648 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:39:48,656 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 15:39:48,962 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:48,963 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/website/config ，设置默认角色：游客
2022-07-09 15:39:52,802 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:52,803 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:52,805 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 15:39:52,806 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 15:39:52,885 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:52,885 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 15:39:52,889 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 15:39:52,889 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 15:47:20,710 WARN (HikariPool.java:787)- master - Thread starvation or clock leap detected (housekeeper delta=5m12s946ms).
2022-07-09 15:47:20,753 WARN (HikariPool.java:787)- auth - Thread starvation or clock leap detected (housekeeper delta=5m12s953ms).
2022-07-09 16:21:04,370 WARN (HikariPool.java:787)- master - Thread starvation or clock leap detected (housekeeper delta=33m43s663ms).
2022-07-09 16:21:04,398 WARN (HikariPool.java:787)- auth - Thread starvation or clock leap detected (housekeeper delta=33m43s645ms).
2022-07-09 16:21:11,636 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:21:11,637 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:21:36,904 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:21:36,904 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:21:36,906 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:21:36,906 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:21:36,968 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:21:36,971 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:21:36,984 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:21:36,985 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:22:57,462 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:22:57,469 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:25:55,775 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:25:55,774 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:25:55,774 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:25:55,780 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:25:55,780 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:25:55,780 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:25:55,916 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:25:55,917 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:31:17,500 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:31:17,500 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:31:17,504 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:31:17,504 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:31:17,550 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:31:17,550 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:31:17,551 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:31:17,551 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:32:10,024 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:32:10,024 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:32:10,024 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:32:10,024 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:32:10,030 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:32:10,030 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:32:10,030 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:32:10,030 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:34:53,567 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:34:53,567 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:34:53,571 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:34:53,571 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:34:53,628 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:34:53,628 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:34:53,629 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:34:53,629 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:37:55,150 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:37:55,150 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:37:55,150 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:37:55,158 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:37:55,158 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:37:55,158 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:37:55,216 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:37:55,217 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:37:59,975 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:37:59,977 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:39:38,546 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:39:38,546 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:39:38,549 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:39:38,549 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:39:38,685 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:39:38,691 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:39:38,691 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:39:38,694 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:39:40,807 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:39:40,812 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:40:44,910 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:40:44,910 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:40:44,920 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:40:44,920 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:40:45,006 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:40:45,008 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:40:45,013 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:40:45,014 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:40:46,164 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:40:46,167 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:42:18,510 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:18,510 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:18,512 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/links ，设置默认角色：游客
2022-07-09 16:42:18,512 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 16:42:22,744 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:22,745 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/about ，设置默认角色：游客
2022-07-09 16:42:26,574 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:26,577 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/messages ，设置默认角色：游客
2022-07-09 16:42:28,005 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:28,008 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/about ，设置默认角色：游客
2022-07-09 16:42:34,272 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:34,273 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles/archives ，设置默认角色：游客
2022-07-09 16:42:36,182 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:36,182 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:36,185 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:42:36,185 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:42:40,034 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:42:40,038 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/categories ，设置默认角色：游客
2022-07-09 16:49:20,709 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:49:20,709 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:49:20,712 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:49:20,712 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:49:22,629 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:49:22,629 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:49:22,638 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:49:22,637 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:49:22,704 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:49:22,715 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:49:22,744 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:49:22,749 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:57:42,727 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:42,726 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:42,732 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:42,727 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:42,740 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:57:42,740 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:57:42,741 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:57:42,740 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:57:57,909 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:57,909 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:57,909 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:57,908 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:57:57,914 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:57:57,914 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:57:57,914 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 16:57:57,914 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:58:07,129 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:58:07,132 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/messages ，设置默认角色：游客
2022-07-09 16:58:08,444 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:58:08,452 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/about ，设置默认角色：游客
2022-07-09 16:58:09,665 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:58:09,665 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:58:09,668 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 16:58:09,668 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/links ，设置默认角色：游客
2022-07-09 16:58:12,106 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:58:12,106 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:58:12,111 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 16:58:12,111 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 16:59:06,507 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:06,506 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:06,510 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/user/menus ，设置默认角色：游客
2022-07-09 16:59:06,510 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:59:06,516 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 16:59:06,706 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:06,708 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/website/config ，设置默认角色：游客
2022-07-09 16:59:08,860 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:08,862 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/pages ，设置默认角色：游客
2022-07-09 16:59:23,387 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:23,390 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/messages ，设置默认角色：游客
2022-07-09 16:59:24,686 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:24,689 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/comments ，设置默认角色：游客
2022-07-09 16:59:24,700 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 16:59:24,700 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /api
2022-07-09 16:59:24,701 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 16:59:37,156 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:37,155 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:37,157 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 16:59:37,157 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/user/menus ，设置默认角色：游客
2022-07-09 16:59:37,162 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 16:59:37,454 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 16:59:37,457 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/comments ，设置默认角色：游客
2022-07-09 16:59:37,474 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> GET
2022-07-09 16:59:37,475 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /api
2022-07-09 16:59:37,475 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 17:06:56,872 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:06:56,872 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:06:56,881 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/user/menus ，设置默认角色：游客
2022-07-09 17:06:56,881 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 17:06:56,891 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=1, userInfoId=1, email=admin@qq.com, loginType=1, username=admin@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[test, user], nickname=管理员, avatar=https://static.ve77.cn/avatar/9107cbf3233cb05ad0ca1af1742a21df.png, intro=ve, webSite=null, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T15:36:38.998)
2022-07-09 17:06:57,204 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:06:57,205 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/comments ，设置默认角色：游客
2022-07-09 17:07:15,755 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:07:15,757 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/talks ，设置默认角色：游客
2022-07-09 17:07:31,128 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:07:31,129 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks ，设置默认角色：游客
2022-07-09 17:07:35,226 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:07:35,226 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:07:35,229 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 17:07:35,229 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks/49 ，设置默认角色：游客
2022-07-09 17:07:38,961 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:07:38,963 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks ，设置默认角色：游客
2022-07-09 17:07:40,803 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:07:40,803 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:07:40,806 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 17:07:40,806 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks/51 ，设置默认角色：游客
2022-07-09 17:08:23,110 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:08:23,110 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:08:23,112 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/area ，设置默认角色：游客
2022-07-09 17:08:23,112 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin ，设置默认角色：游客
2022-07-09 17:27:42,189 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 17:27:43,141 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 17:27:43,146 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 17:27:44,130 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 17:27:44,217 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 17:27:44,220 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 17:27:44,220 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 17:27:44,220 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 17:27:44,417 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 17:27:44,423 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 17:27:44,449 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 17:27:44,450 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 17:27:44,475 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 17:27:44,479 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 17:27:50,608 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 17:27:50,690 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 13898 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 17:27:50,692 INFO (SpringApplication.java:664)- The following profiles are active: pro,auth,msg,upload
2022-07-09 17:27:52,310 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:27:52,313 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 17:27:52,450 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 132 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 17:27:52,465 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:27:52,466 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 17:27:52,491 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 24 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 17:27:52,512 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:27:52,514 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 17:27:52,555 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 17:27:52,556 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2022-07-09 17:27:52,736 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 17:27:53,362 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:27:53,377 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$3e43af1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:27:53,431 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:27:53,854 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 17:27:53,863 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 17:27:53,865 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 17:27:53,865 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 17:27:53,962 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 17:27:53,963 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3207 ms
2022-07-09 17:27:54,311 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 17:27:55,540 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 17:27:55,557 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 17:27:56,911 ERROR (HikariPool.java:593)- auth - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'auth'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at com.baomidou.dynamic.datasource.creator.HikariDataSourceCreator.doCreateDataSource(HikariDataSourceCreator.java:82)
	at com.baomidou.dynamic.datasource.creator.AbstractDataSourceCreator.createDataSource(AbstractDataSourceCreator.java:70)
	at com.baomidou.dynamic.datasource.creator.DefaultDataSourceCreator.createDataSource(DefaultDataSourceCreator.java:48)
	at com.baomidou.dynamic.datasource.provider.AbstractDataSourceProvider.createDataSourceMap(AbstractDataSourceProvider.java:47)
	at com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider.loadDataSources(YmlDynamicDataSourceProvider.java:42)
	at com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1847)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1503)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:157)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:259)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:233)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:451)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:200)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:159)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:582)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.ve.blog.BlogApplication.main(BlogApplication.java:37)
2022-07-09 17:27:56,920 ERROR (TomcatStarter.java:61)- Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'webSecurityConfig': Unsatisfied dependency expressed through field 'authenticationSuccessHandler'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationSuccessHandlerImpl': Unsatisfied dependency expressed through field 'userAuthDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userAuthDao' defined in file [/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/lib-auth/target/classes/com/ve/blog/dao/UserAuthDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/baomidou/dynamic/datasource/spring/boot/autoconfigure/DynamicDataSourceAutoConfiguration.class]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Unknown database 'auth'
2022-07-09 17:27:56,955 INFO (DirectJDKLog.java:173)- Stopping service [Tomcat]
2022-07-09 17:27:56,962 WARN (DirectJDKLog.java:173)- The web application [api] appears to have started a thread named [master housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1074)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2022-07-09 17:27:56,964 WARN (DirectJDKLog.java:173)- The web application [api] appears to have started a thread named [master connection adder] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.net.SocketInputStream.socketRead0(Native Method)
 java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
 java.net.SocketInputStream.read(SocketInputStream.java:171)
 java.net.SocketInputStream.read(SocketInputStream.java:141)
 com.mysql.cj.protocol.ReadAheadInputStream.fill(ReadAheadInputStream.java:107)
 com.mysql.cj.protocol.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:150)
 com.mysql.cj.protocol.ReadAheadInputStream.read(ReadAheadInputStream.java:180)
 java.io.FilterInputStream.read(FilterInputStream.java:133)
 com.mysql.cj.protocol.FullReadInputStream.readFully(FullReadInputStream.java:64)
 com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:63)
 com.mysql.cj.protocol.a.SimplePacketReader.readHeader(SimplePacketReader.java:45)
 com.mysql.cj.protocol.a.NativeProtocol.readMessage(NativeProtocol.java:538)
 com.mysql.cj.protocol.a.NativeProtocol.readServerCapabilities(NativeProtocol.java:496)
 com.mysql.cj.protocol.a.NativeProtocol.beforeHandshake(NativeProtocol.java:383)
 com.mysql.cj.protocol.a.NativeProtocol.connect(NativeProtocol.java:1346)
 com.mysql.cj.NativeSession.connect(NativeSession.java:157)
 com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956)
 com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826)
 com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
 com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
 com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
 com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
 com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
 com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
 com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
 com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
 com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:725)
 com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:711)
 java.util.concurrent.FutureTask.run(FutureTask.java:266)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 java.lang.Thread.run(Thread.java:748)
2022-07-09 17:27:56,973 WARN (AbstractApplicationContext.java:596)- Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
2022-07-09 17:27:57,005 INFO (ConditionEvaluationReportLoggingListener.java:136)- 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2022-07-09 17:27:57,028 ERROR (SpringApplication.java:856)- Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:582)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)
	at com.ve.blog.BlogApplication.main(BlogApplication.java:37)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:142)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:104)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:451)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:200)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:181)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:159)
	... 9 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSecurityConfig': Unsatisfied dependency expressed through field 'authenticationSuccessHandler'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationSuccessHandlerImpl': Unsatisfied dependency expressed through field 'userAuthDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userAuthDao' defined in file [/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/lib-auth/target/classes/com/ve/blog/dao/UserAuthDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/baomidou/dynamic/datasource/spring/boot/autoconfigure/DynamicDataSourceAutoConfiguration.class]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Unknown database 'auth'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:410)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:212)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:175)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:157)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:259)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:233)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:53)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:123)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authenticationSuccessHandlerImpl': Unsatisfied dependency expressed through field 'userAuthDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userAuthDao' defined in file [/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/lib-auth/target/classes/com/ve/blog/dao/UserAuthDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/baomidou/dynamic/datasource/spring/boot/autoconfigure/DynamicDataSourceAutoConfiguration.class]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Unknown database 'auth'
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 63 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'userAuthDao' defined in file [/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/lib-auth/target/classes/com/ve/blog/dao/UserAuthDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/baomidou/dynamic/datasource/spring/boot/autoconfigure/DynamicDataSourceAutoConfiguration.class]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Unknown database 'auth'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1518)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1401)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 76 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [com/baomidou/mybatisplus/autoconfigure/MybatisPlusAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/baomidou/dynamic/datasource/spring/boot/autoconfigure/DynamicDataSourceAutoConfiguration.class]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Unknown database 'auth'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:541)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1179)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:571)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1503)
	... 87 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/baomidou/dynamic/datasource/spring/boot/autoconfigure/DynamicDataSourceAutoConfiguration.class]: Invocation of init method failed; nested exception is com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Unknown database 'auth'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1287)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 100 common frames omitted
Caused by: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Unknown database 'auth'
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:595)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:581)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at com.baomidou.dynamic.datasource.creator.HikariDataSourceCreator.doCreateDataSource(HikariDataSourceCreator.java:82)
	at com.baomidou.dynamic.datasource.creator.AbstractDataSourceCreator.createDataSource(AbstractDataSourceCreator.java:70)
	at com.baomidou.dynamic.datasource.creator.DefaultDataSourceCreator.createDataSource(DefaultDataSourceCreator.java:48)
	at com.baomidou.dynamic.datasource.provider.AbstractDataSourceProvider.createDataSourceMap(AbstractDataSourceProvider.java:47)
	at com.baomidou.dynamic.datasource.provider.YmlDynamicDataSourceProvider.loadDataSources(YmlDynamicDataSourceProvider.java:42)
	at com.baomidou.dynamic.datasource.DynamicRoutingDataSource.afterPropertiesSet(DynamicRoutingDataSource.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1847)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 111 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown database 'auth'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	... 121 common frames omitted
2022-07-09 17:30:35,578 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 17:30:35,663 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 14444 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 17:30:35,665 INFO (SpringApplication.java:664)- The following profiles are active: pro,auth,msg,upload
2022-07-09 17:30:37,220 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:30:37,222 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 17:30:37,373 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 145 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 17:30:37,388 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:30:37,389 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 17:30:37,412 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 22 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 17:30:37,436 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:30:37,437 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 17:30:37,477 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 17:30:37,478 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 17:30:37,640 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 17:30:38,282 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:30:38,298 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$7e259012] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:30:38,350 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:30:38,760 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 17:30:38,769 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 17:30:38,771 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 17:30:38,771 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 17:30:38,869 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 17:30:38,870 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3142 ms
2022-07-09 17:30:39,201 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 17:30:40,283 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 17:30:40,298 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 17:30:40,990 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 17:30:40,994 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 17:30:40,994 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 17:30:40,994 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 17:30:42,129 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 17:30:42,132 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 17:30:43,904 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,907 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,907 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,907 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,908 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,908 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,909 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,909 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,909 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,909 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,909 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,910 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,910 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,910 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,910 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,910 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,910 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,910 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,911 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:43,911 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:30:45,001 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 17:30:45,006 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 17:30:45,006 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 17:30:46,162 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Timeout connecting to [ve77.cn/110.42.180.40:9200]; nested exception is java.lang.RuntimeException: Timeout connecting to [ve77.cn/110.42.180.40:9200]
2022-07-09 17:30:47,123 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 17:30:47,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 17:30:47,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 17:30:47,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 17:30:47,287 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 17:30:47,288 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 17:30:47,288 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 17:30:47,288 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 17:30:47,289 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 17:30:47,289 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 17:30:47,289 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 17:30:47,289 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 17:30:47,289 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 17:30:47,289 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 17:30:47,505 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7b8fcdf2, org.springframework.security.web.context.SecurityContextPersistenceFilter@2459333a, org.springframework.security.web.header.HeaderWriterFilter@215c6ec0, org.springframework.security.web.authentication.logout.LogoutFilter@7030b74c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f96654, org.springframework.security.web.session.ConcurrentSessionFilter@13047d3d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bd7f686, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ae0a26, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@5d00b469, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54d2f5d3, org.springframework.security.web.session.SessionManagementFilter@37c5b8e8, org.springframework.security.web.access.ExceptionTranslationFilter@1ef04613, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f439e0f]
2022-07-09 17:30:47,700 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 17:30:48,171 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 17:30:48,353 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 17:30:48,399 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/api'
2022-07-09 17:30:48,401 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 17:30:48,405 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 17:30:48,498 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 17:30:49,070 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 17:30:49,313 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 17:30:49,375 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#5611bba:0/SimpleConnection@16f2d883 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 49525]
2022-07-09 17:30:49,481 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 14.546 seconds (JVM running for 15.541)
2022-07-09 17:31:00,715 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 17:31:00,718 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 17:31:00,723 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 17:31:08,659 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:31:08,662 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/users/role ，设置默认角色：游客
2022-07-09 17:31:21,028 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:31:21,041 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/admin/comments ，设置默认角色：游客
2022-07-09 17:39:43,339 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:39:43,343 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 17:39:50,493 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:39:50,493 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:39:50,503 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 17:39:50,503 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 17:39:53,580 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:39:53,580 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:39:53,581 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 17:39:53,581 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 17:39:55,670 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@18e6b72b (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:39:58,612 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@32805331 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:00,712 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@7b6a978a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:03,636 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2f57afeb (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:05,741 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@77a0cd0a (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:07,007 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 17:40:07,940 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 17:40:07,945 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 17:40:08,656 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@636609d8 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:08,928 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 17:40:10,757 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2ba38c79 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:13,675 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@1640fa77 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:15,790 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@514b0d16 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:16,099 WARN (ExceptionHandlerExceptionResolver.java:431)- Failure in @ExceptionHandler com.ve.blog.handler.GlobalExceptionHandler#exceptionHandler(HttpServletRequest, Exception)
java.lang.NullPointerException: null
	at com.ve.blog.util.LogUtil.generateMessage(LogUtil.java:59)
	at com.ve.blog.util.LogUtil.println(LogUtil.java:32)
	at com.ve.blog.handler.GlobalExceptionHandler.exceptionHandler(GlobalExceptionHandler.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:197)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:141)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:420)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:75)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1321)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1132)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1078)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:961)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:133)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:147)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:125)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2022-07-09 17:40:16,190 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 17:40:16,192 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 17:40:16,193 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 17:40:16,193 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 17:40:16,410 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 17:40:16,415 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 17:40:16,431 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 17:40:16,432 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 17:40:16,456 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 17:40:16,458 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
2022-07-09 17:40:16,461 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@26692a55 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:40:18,848 INFO (Version.java:21)- HV000001: Hibernate Validator 6.1.6.Final
2022-07-09 17:40:18,943 INFO (StartupInfoLogger.java:55)- Starting BlogApplication using Java 1.8.0_311 on BadMac.local with PID 16401 (/Users/weiyi/Downloads/ve-blog-plus/blog-springboot-plus/app/target/classes started by weiyi in /Users/weiyi/Downloads/ve-blog-plus)
2022-07-09 17:40:18,945 INFO (SpringApplication.java:664)- The following profiles are active: pro,auth,msg,upload
2022-07-09 17:40:20,610 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:40:20,612 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.
2022-07-09 17:40:20,748 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 130 ms. Found 1 Elasticsearch repository interfaces.
2022-07-09 17:40:20,763 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:40:20,764 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.
2022-07-09 17:40:20,785 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 20 ms. Found 0 Reactive Elasticsearch repository interfaces.
2022-07-09 17:40:20,806 INFO (RepositoryConfigurationDelegate.java:250)- Multiple Spring Data modules found, entering strict repository configuration mode!
2022-07-09 17:40:20,807 INFO (RepositoryConfigurationDelegate.java:128)- Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2022-07-09 17:40:20,844 INFO (RepositoryConfigurationExtensionSupport.java:349)- Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.ve.blog.dao.ElasticsearchDao. If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository.
2022-07-09 17:40:20,844 INFO (RepositoryConfigurationDelegate.java:188)- Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2022-07-09 17:40:21,020 WARN (Logger.java:44)- Skipping MapperFactoryBean with name 'elasticsearchDao' and 'com.ve.blog.dao.ElasticsearchDao' mapperInterface. Bean already defined with the same name!
2022-07-09 17:40:21,655 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:40:21,673 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ce189ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:40:21,714 INFO (PostProcessorRegistrationDelegate.java:350)- Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-07-09 17:40:22,122 INFO (TomcatWebServer.java:108)- Tomcat initialized with port(s): 8088 (https)
2022-07-09 17:40:22,131 INFO (DirectJDKLog.java:173)- Initializing ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 17:40:22,132 INFO (DirectJDKLog.java:173)- Starting service [Tomcat]
2022-07-09 17:40:22,133 INFO (DirectJDKLog.java:173)- Starting Servlet engine: [Apache Tomcat/9.0.41]
2022-07-09 17:40:22,232 INFO (DirectJDKLog.java:173)- Initializing Spring embedded WebApplicationContext
2022-07-09 17:40:22,233 INFO (ServletWebServerApplicationContext.java:289)- Root WebApplicationContext: initialization completed in 3225 ms
2022-07-09 17:40:22,567 INFO (HikariDataSource.java:80)- master - Starting...
2022-07-09 17:40:23,617 INFO (HikariDataSource.java:82)- master - Start completed.
2022-07-09 17:40:23,641 INFO (HikariDataSource.java:80)- auth - Starting...
2022-07-09 17:40:24,355 INFO (HikariDataSource.java:82)- auth - Start completed.
2022-07-09 17:40:24,359 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [auth] success
2022-07-09 17:40:24,359 INFO (DynamicRoutingDataSource.java:148)- dynamic-datasource - add a datasource named [master] success
2022-07-09 17:40:24,360 INFO (DynamicRoutingDataSource.java:228)- dynamic-datasource initial loaded [2] datasource,primary datasource named [master]
2022-07-09 17:40:25,495 WARN (OpenApiExtensionResolver.java:144)- (Ignores) Failed to read Markdown files,Error Message:class path resource [markdowns/] cannot be resolved to URL because it does not exist 
2022-07-09 17:40:25,499 INFO (AutowiredAnnotationBeanPostProcessor.java:478)- Autowired annotation is not supported on static fields: public static java.lang.String com.ve.blog.config.Knife4jConfig.port
2022-07-09 17:40:27,327 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,330 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,330 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,330 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,331 WARN (CustomConversions.java:270)- Registering converter from interface org.springframework.data.elasticsearch.core.geo.GeoJson to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,331 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to interface org.springframework.data.elasticsearch.core.geo.GeoJson as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,331 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,331 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,332 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,332 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,332 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,332 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,333 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,333 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiLineString as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,333 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,333 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,333 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,334 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonMultiPolygon as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,334 WARN (CustomConversions.java:270)- Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:27,334 WARN (CustomConversions.java:260)- Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoJsonGeometryCollection as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2022-07-09 17:40:28,435 INFO (VersionInfo.java:62)- Version Spring Data Elasticsearch: 4.1.2
2022-07-09 17:40:28,439 INFO (VersionInfo.java:63)- Version Elasticsearch Client in build: 7.9.3
2022-07-09 17:40:28,439 INFO (VersionInfo.java:64)- Version Elasticsearch Client used: 7.9.3
2022-07-09 17:40:29,615 WARN (SimpleElasticsearchRepository.java:96)- Cannot create index: Timeout connecting to [ve77.cn/110.42.180.40:9200]; nested exception is java.lang.RuntimeException: Timeout connecting to [ve77.cn/110.42.180.40:9200]
2022-07-09 17:40:30,603 INFO (WebMvcPropertySourcedRequestMappingHandlerMapping.java:69)- Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2ControllerWebMvc#getDocumentation(String, HttpServletRequest)]
2022-07-09 17:40:30,802 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/ws/**'] with []
2022-07-09 17:40:30,804 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/static/**'] with []
2022-07-09 17:40:30,804 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/css/**'] with []
2022-07-09 17:40:30,804 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/js/**'] with []
2022-07-09 17:40:30,804 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/index.html'] with []
2022-07-09 17:40:30,804 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/favicon.ico'] with []
2022-07-09 17:40:30,804 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/doc.html'] with []
2022-07-09 17:40:30,805 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/webjars/**'] with []
2022-07-09 17:40:30,805 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/swagger-resources/**'] with []
2022-07-09 17:40:30,805 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/v2/api-docs/**'] with []
2022-07-09 17:40:30,806 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/captcha'] with []
2022-07-09 17:40:30,806 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/hello'] with []
2022-07-09 17:40:30,806 INFO (DefaultSecurityFilterChain.java:51)- Will secure Ant [pattern='/public/**'] with []
2022-07-09 17:40:31,004 INFO (DefaultSecurityFilterChain.java:51)- Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c29b0dc, org.springframework.security.web.context.SecurityContextPersistenceFilter@2bd7f686, org.springframework.security.web.header.HeaderWriterFilter@37c5b8e8, org.springframework.security.web.authentication.logout.LogoutFilter@512dc0e0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@637506d8, org.springframework.security.web.session.ConcurrentSessionFilter@2a5efbb9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5b2c7186, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7b9d1a4, org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter@7b8fcdf2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@228958a, org.springframework.security.web.session.SessionManagementFilter@3205610d, org.springframework.security.web.access.ExceptionTranslationFilter@215c6ec0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5296f00c]
2022-07-09 17:40:31,162 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'applicationTaskExecutor'
2022-07-09 17:40:31,466 INFO (ExecutorConfigurationSupport.java:181)- Initializing ExecutorService 'taskScheduler'
2022-07-09 17:40:31,611 INFO (DirectJDKLog.java:173)- Starting ProtocolHandler ["https-jsse-nio-8088"]
2022-07-09 17:40:31,648 INFO (TomcatWebServer.java:220)- Tomcat started on port(s): 8088 (https) with context path '/api'
2022-07-09 17:40:31,650 INFO (DocumentationPluginsBootstrapper.java:93)- Documentation plugins bootstrapped
2022-07-09 17:40:31,652 INFO (AbstractDocumentationPluginsBootstrapper.java:79)- Found 1 custom documentation plugin(s)
2022-07-09 17:40:31,731 INFO (ApiListingReferenceScanner.java:44)- Scanning for api listing references
2022-07-09 17:40:32,257 INFO (CachingOperationNameGenerator.java:41)- Generating unique operation named: savePhotoAlbumCoverUsingPOST_1
2022-07-09 17:40:32,495 INFO (AbstractConnectionFactory.java:636)- Attempting to connect to: [localhost:5672]
2022-07-09 17:40:32,559 INFO (AbstractConnectionFactory.java:589)- Created new connection: rabbitConnectionFactory#4cfc0c48:0/SimpleConnection@48a61e38 [delegate=amqp://guest@127.0.0.1:5672/, localPort= 52120]
2022-07-09 17:40:32,687 INFO (StartupInfoLogger.java:61)- Started BlogApplication in 14.463 seconds (JVM running for 15.263)
2022-07-09 17:40:38,563 INFO (DirectJDKLog.java:173)- Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-07-09 17:40:38,566 INFO (FrameworkServlet.java:525)- Initializing Servlet 'dispatcherServlet'
2022-07-09 17:40:38,571 INFO (FrameworkServlet.java:547)- Completed initialization in 5 ms
2022-07-09 17:40:38,608 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:40:38,608 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:40:38,611 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 17:40:38,611 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 17:40:39,953 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:40:39,956 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 17:40:39,984 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:40:39,986 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 17:40:54,692 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:40:54,696 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks ，设置默认角色：游客
2022-07-09 17:40:57,668 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:40:57,668 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:40:57,671 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 17:40:57,671 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks/49 ，设置默认角色：游客
2022-07-09 17:41:02,321 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:41:02,326 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks ，设置默认角色：游客
2022-07-09 17:41:10,313 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:41:10,313 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:41:10,315 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks/49 ，设置默认角色：游客
2022-07-09 17:41:10,315 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 17:41:53,478 INFO (LogUtil.java:32)- loadUserByUsername(UserDetailsServiceImpl.java:58) -->> 认证：ve@qq.com
2022-07-09 17:41:54,162 INFO (LogUtil.java:32)- onAuthenticationSuccess(AuthenticationSuccessHandlerImpl.java:39) -->> 认证成功！
2022-07-09 17:41:54,165 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=2, userInfoId=2, email=ve@qq.com, loginType=1, username=ve@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=静闻弦语, avatar=http://static.ve77.cn/avatar/be212d0db8dfbecd651c2d8e0e396f83.jpg, intro=此心若得一株雪，人生何处不清明。, webSite=https://ve77.cn, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T17:41:54.046)
2022-07-09 17:41:54,219 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=2, userInfoId=2, email=ve@qq.com, loginType=1, username=ve@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=静闻弦语, avatar=http://static.ve77.cn/avatar/be212d0db8dfbecd651c2d8e0e396f83.jpg, intro=此心若得一株雪，人生何处不清明。, webSite=https://ve77.cn, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T17:41:54.046)
2022-07-09 17:41:54,220 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=2, userInfoId=2, email=ve@qq.com, loginType=1, username=ve@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=静闻弦语, avatar=http://static.ve77.cn/avatar/be212d0db8dfbecd651c2d8e0e396f83.jpg, intro=此心若得一株雪，人生何处不清明。, webSite=https://ve77.cn, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T17:41:54.046)
2022-07-09 17:41:54,220 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=2, userInfoId=2, email=ve@qq.com, loginType=1, username=ve@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=静闻弦语, avatar=http://static.ve77.cn/avatar/be212d0db8dfbecd651c2d8e0e396f83.jpg, intro=此心若得一株雪，人生何处不清明。, webSite=https://ve77.cn, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T17:41:54.046)
2022-07-09 17:41:54,220 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=2, userInfoId=2, email=ve@qq.com, loginType=1, username=ve@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=静闻弦语, avatar=http://static.ve77.cn/avatar/be212d0db8dfbecd651c2d8e0e396f83.jpg, intro=此心若得一株雪，人生何处不清明。, webSite=https://ve77.cn, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T17:41:54.046)
2022-07-09 17:41:54,236 INFO (LogUtil.java:32)- updateFill(MyMetaObjectHandler.java:30) -->> start update fill ....
2022-07-09 17:41:56,781 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:41:56,784 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/comments ，设置默认角色：游客
2022-07-09 17:41:57,136 INFO (LogUtil.java:32)- getLoginUser(UserUtils.java:32) -->> auth :UserDetailDTO(id=2, userInfoId=2, email=ve@qq.com, loginType=1, username=ve@qq.com, password=$2a$10$AkxkZaqcxEXdiNE1nrgW1.ms3aS9C5ImXMf8swkWUJuFGMqDl.TPW, roleList=[admin], nickname=静闻弦语, avatar=http://static.ve77.cn/avatar/be212d0db8dfbecd651c2d8e0e396f83.jpg, intro=此心若得一株雪，人生何处不清明。, webSite=https://ve77.cn, articleLikeSet=[], commentLikeSet=[], talkLikeSet=[], ipAddress=127.0.0.1, ipSource=, isDisable=0, browser=Chrome 10, os=Mac OS X, lastLoginTime=2022-07-09T17:41:54.046)
2022-07-09 17:41:57,144 INFO (LogUtil.java:32)- insertFill(MyMetaObjectHandler.java:24) -->> start insert fill ....
2022-07-09 17:41:57,385 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:41:57,386 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments/724/replies ，设置默认角色：游客
2022-07-09 17:42:06,422 WARN (RejectAndDontRequeueRecoverer.java:43)- Retries exhausted for message (Body:'[B@6e72d8df(byte[147])' MessageProperties [headers={}, contentType=application/octet-stream, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=email_exchange, receivedRoutingKey=*, deliveryTag=1, consumerTag=amq.ctag-cIUoMCCU_ArAW8eq1WMrXg, consumerQueue=email_queue])
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void com.ve.blog.consumer.EmailConsumer.process(byte[])' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:229)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:134)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1632)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1551)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:93)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:116)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at org.springframework.amqp.rabbit.listener.$Proxy262.invokeListener(Unknown Source)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1539)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1530)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1474)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:966)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:912)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:83)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1287)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1193)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 Mail content denied. http://service.mail.qq.com/cgi-bin/help?subtype=1&&id=20022&&no=1000726 [ME9lwWUQmw3NDl6dHsATQWRqGWe0AzGW2rXz3wB+/FH/Oluhr6OBKJ//E0bdhkV/Ig== IP: 117.182.36.62]

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:491)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.ve.blog.consumer.EmailConsumer.process(EmailConsumer.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:130)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:66)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:221)
	... 27 common frames omitted
2022-07-09 17:42:06,430 WARN (ConditionalRejectingErrorHandler.java:169)- Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Retry Policy Exhausted
	at org.springframework.amqp.rabbit.retry.RejectAndDontRequeueRecoverer.recover(RejectAndDontRequeueRecoverer.java:45)
	at org.springframework.amqp.rabbit.config.StatelessRetryOperationsInterceptorFactoryBean.lambda$createRecoverer$0(StatelessRetryOperationsInterceptorFactoryBean.java:74)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$ItemRecovererCallback.recover(RetryOperationsInterceptor.java:142)
	at org.springframework.retry.support.RetryTemplate.handleRetryExhausted(RetryTemplate.java:539)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:387)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor.invoke(RetryOperationsInterceptor.java:116)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at org.springframework.amqp.rabbit.listener.$Proxy262.invokeListener(Unknown Source)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1539)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1530)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1474)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:966)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:912)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1600(SimpleMessageListenerContainer.java:83)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.mainLoop(SimpleMessageListenerContainer.java:1287)
	at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1193)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: null
	... 19 common frames omitted
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void com.ve.blog.consumer.EmailConsumer.process(byte[])' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:229)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:134)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1632)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1551)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.retry.interceptor.RetryOperationsInterceptor$1.doWithRetry(RetryOperationsInterceptor.java:93)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	... 14 common frames omitted
Caused by: org.springframework.mail.MailSendException: Failed messages: com.sun.mail.smtp.SMTPSendFailedException: 550 Mail content denied. http://service.mail.qq.com/cgi-bin/help?subtype=1&&id=20022&&no=1000726 [ME9lwWUQmw3NDl6dHsATQWRqGWe0AzGW2rXz3wB+/FH/Oluhr6OBKJ//E0bdhkV/Ig== IP: 117.182.36.62]

	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:491)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:323)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:312)
	at com.ve.blog.consumer.EmailConsumer.process(EmailConsumer.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:171)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:120)
	at org.springframework.amqp.rabbit.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:130)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:66)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:221)
	... 27 common frames omitted
2022-07-09 17:42:27,146 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:42:27,148 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks ，设置默认角色：游客
2022-07-09 17:42:31,147 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:42:31,147 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:42:31,148 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 17:42:31,148 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks/51 ，设置默认角色：游客
2022-07-09 17:42:33,625 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:42:33,629 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments/725/replies ，设置默认角色：游客
2022-07-09 17:55:57,534 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:55:57,541 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:55:57,540 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:55:57,535 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:55:57,563 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 17:55:57,565 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/talks/51 ，设置默认角色：游客
2022-07-09 17:55:57,568 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 17:55:57,568 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/comments ，设置默认角色：游客
2022-07-09 17:56:02,823 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@3ea75b05 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:02,823 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@57ec1021 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:02,823 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@6dbdd768 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:05,917 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:56:05,916 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:56:05,920 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:POST/api/report ，设置默认角色：游客
2022-07-09 17:56:05,920 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/ ，设置默认角色：游客
2022-07-09 17:56:05,976 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:56:05,978 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/home/talks ，设置默认角色：游客
2022-07-09 17:56:06,014 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:60) -->> 2.分析url需要的角色!
2022-07-09 17:56:06,015 INFO (LogUtil.java:32)- getAttributes(FilterInvocationSecurityMetadataSourceImpl.java:85) -->> 未匹配的 url:GET/api/articles ，设置默认角色：游客
2022-07-09 17:56:07,881 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@16f72118 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:07,881 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@17e8fa4d (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:07,881 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@58b13195 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:10,993 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@1f196287 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:11,013 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@12242889 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:11,035 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@6913cd78 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:12,924 WARN (PoolBase.java:184)- master - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@5d59487 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2022-07-09 17:56:16,987 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:54) -->> POST
2022-07-09 17:56:16,989 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:55) -->> /api
2022-07-09 17:56:16,990 INFO (AbstractInternalLogger.java:171)- Reconnecting, last destination was ve77.cn/110.42.180.40:6379
2022-07-09 17:56:16,991 INFO (LogUtil.java:32)- exceptionHandler(GlobalExceptionHandler.java:56) -->> localhost
2022-07-09 17:56:17,125 INFO (ReconnectionHandler.java:164)- Reconnected to ve77.cn:6379
2022-07-09 17:59:39,020 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 17:59:39,739 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 17:59:39,743 INFO (SimpleMessageListenerContainer.java:634)- Waiting for workers to finish.
2022-07-09 17:59:40,476 INFO (SimpleMessageListenerContainer.java:637)- Successfully waited for workers to finish.
2022-07-09 17:59:40,532 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'taskScheduler'
2022-07-09 17:59:40,534 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 17:59:40,535 INFO (AbstractMessageListenerContainer.java:1284)- Shutdown ignored - container is not active already
2022-07-09 17:59:40,536 INFO (ExecutorConfigurationSupport.java:218)- Shutting down ExecutorService 'applicationTaskExecutor'
2022-07-09 17:59:40,702 INFO (DynamicRoutingDataSource.java:205)- dynamic-datasource start closing ....
2022-07-09 17:59:40,708 INFO (HikariDataSource.java:350)- auth - Shutdown initiated...
2022-07-09 17:59:40,730 INFO (HikariDataSource.java:352)- auth - Shutdown completed.
2022-07-09 17:59:40,732 INFO (HikariDataSource.java:350)- master - Shutdown initiated...
2022-07-09 17:59:40,740 INFO (HikariDataSource.java:352)- master - Shutdown completed.
2022-07-09 17:59:40,741 INFO (DynamicRoutingDataSource.java:209)- dynamic-datasource all closed success,bye
